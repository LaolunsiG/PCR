# name: Clash.Meta-stable
# 参考的配置
# 1. https://github.com/MetaCubeX/mihomo/blob/Meta/docs/config.yaml
# 2. https://raw.githubusercontent.com/As-Lucky/Lucky/main/Lucky-ClashVerge.yaml
# 3. https://gitlab.com/lodepuly/vpn_tool/-/tree/master/Tool/Clash/Config
# 4. https://github.com/Moli-X/Resources/raw/main/Clash/Clash.yml
# updata：2025-01-25
# updata_log：
# updata_url: https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Config_File/Clash.Meta/Clash.Meta-stable.yaml
# repo: https://github.com/LaolunsiG/PCR/tree/main/Config_File/Clash.Meta
# 图标备用: 📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱


# -------------------------------------
# 出站配置
# -------------------------------------
# 代理集-锚点配置
NodeParam: &NodeParam {type: http, interval: 43200, health-check: {enable: true, lazy: true, url: 'http://www.google.com/generate_204', timeout: 2000, interval: 3600}}

# 出站-本地节点
proxies: null

# 出站-代理集
proxy-providers:

  机场1:
    url: "你的机场订阅链接"
    <<: *NodeParam                 # 使用上述锚点配置
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场1]" # 为订阅节点添加机场名称前缀
  
  # 机场2:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport2.yaml
  #   override:
  #     additional-prefix: "[机场2]"
  
  # 机场3:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport3.yaml
  #   override:
  #     additional-prefix: "[机场3]"
  
  # 机场4:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport4.yaml
  #   override:
  #     additional-prefix: "[机场4]"
  
  # 机场5:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport5.yaml
  #   override:
  #     additional-prefix: "[机场5]"
  
  # 机场6:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport6.yaml
  #   override:
  #     additional-prefix: "[机场6]"
  
  # 机场7:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport7.yaml
  #   override:
  #     additional-prefix: "[机场7]"
  
  # 机场8:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport8.yaml
  #   override:
  #     additional-prefix: "[机场8]"
  
  # 机场9:
  #    url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport9.yaml
  #   override:
  #     additional-prefix: "[机场9]"
  
  # 机场10:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport10.yaml
  #   override:
  #     additional-prefix: "[机场10]"


# -------------------------------------
# 全局配置
# -------------------------------------
allow-lan: true   # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

# -------------------------------------
mode: rule 
log-level: info         # 日志等级 silent/error/warning/info/debug。
ipv6: true              # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录。
# 控制是否让 Clash 去匹配进程，always 开启，强制匹配所有进程；strict(默认)由 Clash 判断是否开启；off 不匹配进程，推荐在路由器上使用此模式。
find-process-mode: strict
unified-delay: false    # 开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
tcp-concurrent: true    # TCP 并发
# 缓存，存储 select 选择记录，持久化 fake-ip
profile: {store-selected: true, store-fake-ip: true}
global-client-fingerprint: chrome

# -------------------------------------
# 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
external-controller: 127.0.0.1:9090 # API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
secret: "xiaoe"                     # API 的访问密钥

# -------------------------------------
# GEODATA 配置
# GEOIP 数据模式
geodata-mode: false        # 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true 为 dat，此项有默认值 false。
# GEO 文件加载模式，standard：标准加载器；memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: standard
geo-auto-update: true      # 是否自动更新
geo-update-interval: 24    # 单位h（时），每24小时更新一次
geox-url:                  # 自定义 geodata url（更新地址）
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"


# -------------------------------------
# 入站配置
# -------------------------------------
# 代理端口配置
#port: 7890         # http 代理端口
#socks-port: 7891   # SOCKS5 代理服务端口
mixed-port: 7893   # 混合端口，同时支持 HTTP(S) 和 SOCKS5 协议。您可以使用任何支持 HTTP 或 SOCKS 代理的程序连接到这个端口。

# -------------------------------------
# 配置虚拟网卡，在 tun 模式下必须获得 IP 地址。
tun:
  enable: true
  stack: mixed
  device: mihomo.xiaoe
  auto-route: true             # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。
  auto-detect-interface: true  # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  dns-hijack: ['any:53']       # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则为 udp://
  strict-route: true           # 防止地址泄漏，并使 DNS 劫持在 Android 上工作。


# -------------------------------------
# DNS配置
# -------------------------------------
# 嗅探域名
sniffer:
  enable: true  
  force-dns-mapping: true    # 对 redir-host 类型识别的流量进行强制嗅探
  parse-pure-ip: true        # 对所有未获取到域名的流量进行强制嗅探
  override-destination: true # 访问嗅探后的地址
  sniff: {HTTP: {ports: [80, 8080-8880], override-destination: true}, TLS: {ports: [443, 8443]}, QUIC: {ports: [443, 8443]}}
  force-domain: 
    - +.v2ex.com
  skip-domain: 
    - Mijia Cloud

# -------------------------------------
hosts:

# -------------------------------------
dns:
  enable: true          # 关闭将使用系统 DNS
  prefer-h3: true       # DOH 优先使用 http/3
  listen: 0.0.0.0:1053  # DNS 服务监听，仅支持 udp
  ipv6: false           # 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，默认黑名单，即以下地址不会下发 fakeip 映射用于连接，回到 redir-host 模式。
  fake-ip-filter: 
    - '*.lan'
    - '*.localdomain'
    - '*.example'
    - '*.invalid'
    - '*.localhost'
    - '*.test'
    - '*.local'
    - '*.home.arpa'
    - 'time.*.com'
    - 'time.*.gov'
    - 'time.*.edu.cn'
    - 'time.*.apple.com'
    - 'time-ios.apple.com'
    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'
    - '*.time.edu.cn'
    - '*.ntp.org.cn'
    - '+.pool.ntp.org'
    - 'time1.cloud.tencent.com'
    - 'music.163.com'
    - '*.music.163.com'
    - '*.126.net'
    - 'musicapi.taihe.com'
    - 'music.taihe.com'
    - 'songsearch.kugou.com'
    - 'trackercdn.kugou.com'
    - '*.kuwo.cn'
    - 'api-jooxtt.sanook.com'
    - 'api.joox.com'
    - 'joox.com'
    - 'y.qq.com'
    - '*.y.qq.com'
    - 'streamoc.music.tc.qq.com'
    - 'mobileoc.music.tc.qq.com'
    - 'isure.stream.qqmusic.qq.com'
    - 'dl.stream.qqmusic.qq.com'
    - 'aqqmusic.tc.qq.com'
    - 'amobile.music.tc.qq.com'
    - '*.xiami.com'
    - '*.music.migu.cn'
    - 'music.migu.cn'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - 'localhost.ptlogin2.qq.com'
    - 'localhost.sec.qq.com'
    - '+.qq.com'
    - '+.tencent.com'
    - '+.srv.nintendo.net'
    - '*.n.n.srv.nintendo.net'
    - '+.stun.playstation.net'
    - 'xbox.*.*.microsoft.com'
    - '*.*.xboxlive.com'
    - 'xbox.*.microsoft.com'
    - 'xnotify.xboxlive.com'
    - '+.battlenet.com.cn'
    - '+.wotgame.cn'
    - '+.wggames.cn'
    - '+.wowsgame.cn'
    - '+.wargaming.net'
    - 'proxy.golang.org'
    - 'stun.*.*'
    - 'stun.*.*.*'
    - '+.stun.*.*'
    - '+.stun.*.*.*'
    - '+.stun.*.*.*.*'
    - '+.stun.*.*.*.*.*'
    - 'heartbeat.belkin.com'
    - '*.linksys.com'
    - '*.linksyssmartwifi.com'
    - '*.router.asus.com'
    - 'mesu.apple.com'
    - 'swscan.apple.com'
    - 'swquery.apple.com'
    - 'swdownload.apple.com'
    - 'swcdn.apple.com'
    - 'swdist.apple.com'
    - 'lens.l.google.com'
    - 'stun.l.google.com'
    - 'na.b.g-tun.com'
    - '+.nflxvideo.net'
    - '*.square-enix.com'
    - '*.finalfantasyxiv.com'
    - '*.ffxiv.com'
    - '*.ff14.sdo.com'
    - 'ff.dorado.sdo.com'
    - '*.mcdn.bilivideo.cn'
    - '+.media.dssott.com'
    - 'shark007.net'
    - 'Mijia Cloud'
    - '+.cmbchina.com'
    - '+.cmbimg.com'
    - 'local.adguard.org'
    - 'static.adtidy.org'
    - '+.sandai.net'
    - '+.n0808.com'
    - '+.3gppnetwork.org'
    - 'adguardteam.github.io'
    - 'anti-ad.net'
  # ----------------DNS 服务配置--------------------
  # DOH: https://1.12.12.12/dns-query, https://1.1.1.1/dns-query
  # UDP: 119.29.29.29, 223.5.5.5 , 8.8.8.8, 8.8.4.4
  # 默认 DNS, 用于解析 DNS 服务器 的域名，必须为 IP, 可为加密 DNS
  default-nameserver: ['223.5.5.5', '119.29.29.29', '8.8.8.8', '1.1.1.1']
  # 专用于节点域名解析的 DNS 服务器，非必要配置项，因为大部分的代理服务器都是 IP 地址
  proxy-server-nameserver:
    - 'https://223.5.5.5/dns-query#DIRECT'    # 阿里 DNS
    - 'https://1.12.12.12/dns-query#DIRECT'   # 腾讯 DNS
    - 'https://1.1.1.1/dns-query#DIRECT'      # Cloudflare
    - 'tls://8.8.4.4:853'                     # Goolge
  # DNS 分流，指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询。
  nameserver-policy: 
    # 广告拦截
    #'geosite:category-ads-all': rcode://success
    #'rule-set:Ad_Domain': rcode://success
    #'rule-set:WeChat': ['119.29.29.29', '182.254.118.118']
    #'rule-set:ChinaMedia1,ChinaMedia2': ['1.2.4.8', '223.5.5.5', 'system']
    # 国内分流
    #'geosite:cn,private': ['1.2.4.8', 'system']
    #'rule-set:CN1,CN2': ['1.2.4.8', 'system']
  # 默认的域名解析服务器，解析代理服务器的 IP 地址；匹配直连策略或遇到 IP 规则时会进行本地（直连） DNS 解析，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析。
  # 支持 UDP，TCP，DoT，DoH，DoQ
  nameserver: ['1.2.4.8', '223.5.5.5', 'system', '119.29.29.29']
  # 当 `fallback` 存在时, DNS 服务器将向此部分中的服务器与 nameservers 中的服务器发送并发请求
  # 一般情况下使用境外 DNS, 保证结果可信
  # 配置 fallback 后默认启用 fallback-filter，geoip-code 为 cn
  # fallback: 
  #   - 'https://8.8.8.8/dns-query#🚀 策略选择&h3=true' # 指定策略组和强制使用 HTTP/3（并发查询 h2 和 h3）
  #   - 'https://1.1.1.1/dns-query#🚀 策略选择&h3=true' 
  # # 后备域名解析服务器筛选，满足条件的将使用 fallback结果或只使用 fallback解析，这是对抗 DNS 污染攻击的一种措施。
  # fallback-filter:
  #   geoip: false      # 是否启用 geoip 检测
  #   geoip-code: CN    # 除了 geoip-code 配置的国家 IP, 其他的 IP 结果会被视为污染，将采用 fallback 结果。
  #   # 这些网段的结果会被视为污染，nameserver 解析出这些结果时将会采用 fallback 的解析结果。
  #   ipcidr: [240.0.0.0/4, 0.0.0.0/32, 127.0.0.1/32]
  #   #geosite:         # geosite 列表的内容被视为已污染，匹配到 geosite 的域名，将只使用 fallback 解析，不去使用 nameserver.
  #     #- gfw
  #   #domain:          # 这些域名被视为已污染，匹配到这些域名，会直接使用 fallback 解析，不去使用 nameserver。
  #     #- '+.google.com'
  #     #- '+.facebook.com'
  #     #- '+.youtube.com'


# -------------------------------------
# 策略组(代理组)
# -------------------------------------
# 地区节点筛选锚点配置
## Africa
FilterIN: &FilterIN '(?i)🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India'
## Americas
FilterCA: &FilterCA '^(?=.*(🇨🇦|加拿大|多伦多|温哥华|蒙特利尔|卡尔加里|渥太华|魁北克|埃德蒙顿|温尼伯|哈利法克斯|萨斯卡通|维多利亚|哈密尔顿|canada|can))(?!(.*(回国|校园|游戏|🎮|game))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
## Asia
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
## Europe
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'

# 地区专用锚点
## 锚点 - 时延优选参数 [每 30 秒一次惰性健康检查，容差 20ms，时延超过 2.5 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &urltest {type: url-test, tolerance: 20, url: 'http://www.google.com/generate_204', interval: 30, disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false, include-all-providers: true}
## 锚点 - 故障转移参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &fallback {type: fallback, url: 'http://www.google.com/generate_204', interval: 30, disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: true, include-all-providers: true}
## 锚点 - 负载均衡参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &loadbalance {type: load-balance, strategy: consistent-hashing, url: 'http://www.google.com/generate_204', interval: 30, disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: true, include-all-providers: true}
## 锚点 - 手动选择参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
Select: &select {type: select, url: 'http://www.google.com/generate_204', disable-udp: false, timeout: 2500, max-failed-times: 3}

# 机场专用锚点
Select1: &select1 {type: select, url: 'http://www.google.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, lazy: true, hidden: false}
UrlTest1: &urltest1 {type: url-test, tolerance: 20, url: 'http://www.google.com/generate_204', interval: 30, disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}
LoadBalance1: &loadbalance1 {type: load-balance, strategy: consistent-hashing, url: 'http://www.google.com/generate_204', interval: 30, timeout: 2500, max-failed-times: 3, disable-udp: false, lazy: true, hidden: true}

# 功能策略组专用锚点
UrlTest2: &urltest2 {type: url-test, tolerance: 20, url: 'http://www.google.com/generate_204', interval: 600, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}

# -------------------------------------
# 内容备份：机场01, 机场02, 机场03, 机场04, 机场05, 机场06, 机场07, 机场08, 机场09, 机场10
# ⏱ 机场01延迟优选, ⏱ 机场02延迟优选, ⏱ 机场03延迟优选, ⏱ 机场04延迟优选, ⏱ 机场05延迟优选, ⏱ 机场06延迟优选, ⏱ 机场07延迟优选, ⏱ 机场08延迟优选, ⏱ 机场09延迟优选, ⏱ 机场10延迟优选
# 🎛 机场01负载均衡, 🎛 机场02负载均衡, 🎛 机场03负载均衡, 🎛 机场04负载均衡, 🎛 机场05负载均衡, 🎛 机场06负载均衡, 🎛 机场07负载均衡, 🎛 机场08负载均衡, 🎛 机场09负载均衡, 🎛 机场10负载均衡
proxy-groups:
  # ----------------节点选择策略组--------------------
  - {name: 🚀 策略选择, type: select, proxies: [🛫 机场延迟优选, 🛫 机场负载均衡, 🗺 地区选择, 🎯 Direct], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Rocket.png}
  # 模块化选择
  - {name: 🗺 地区选择, type: select, proxies: [🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🎯 Direct], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Accommodation/Map.png}
  - {name: 🛫 机场延迟优选, <<: *urltest2, proxies: [⏱ 机场01延迟优选, 🎯 Direct], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png}
  - {name: 🛫 机场负载均衡, type: select, proxies: [🎛 机场01负载均衡, 🎯 Direct], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png}
  
  # ----------------机场测试--------------------
  ## 机场延迟优选
  - {name: ⏱ 机场01延迟优选, <<: *urltest1, use: [机场01], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场02延迟优选, <<: *urltest1, use: [机场02], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场03延迟优选, <<: *urltest1, use: [机场03], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场04延迟优选, <<: *urltest1, use: [机场04], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场05延迟优选, <<: *urltest1, use: [机场05], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场06延迟优选, <<: *urltest1, use: [机场06], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场07延迟优选, <<: *urltest1, use: [机场07], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场08延迟优选, <<: *urltest1, use: [机场08], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场09延迟优选, <<: *urltest1, use: [机场09], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  # - {name: ⏱ 机场10延迟优选, <<: *urltest1, use: [机场10], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  
  ## 机场负载均衡
  - {name: 🎛 机场01负载均衡, <<: *loadbalance1, use: [机场01], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场02负载均衡, <<: *loadbalance1, use: [机场02], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场03负载均衡, <<: *loadbalance1, use: [机场03], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场04负载均衡, <<: *loadbalance1, use: [机场04], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场05负载均衡, <<: *loadbalance1, use: [机场05], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场06负载均衡, <<: *loadbalance1, use: [机场06], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场07负载均衡, <<: *loadbalance1, use: [机场07], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场08负载均衡, <<: *loadbalance1, use: [机场08], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场09负载均衡, <<: *loadbalance1, use: [机场09], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  # - {name: 🎛 机场10负载均衡, <<: *loadbalance1, use: [机场10], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  
  # ----------------功能策略组--------------------
  # 兜底策略组
  - {name: 🐟 漏网之鱼, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Final.png} 
  # 服务平台
  ## 机场服务
  - {name: 🛫 Airport, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png}
  ## 网络测试
  ## 选择`🎯 Direct`为测试本地网络（运营商网络速度和 IPv6 支持情况），可选择其它节点用于测试机场节点速度和 IPv6 支持情况
  - {name: 📈 Network Test, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Speedtest.png}
  ## 下载服务
  - {name: 🌐 Download, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Download.png}
  ## 人工智能
  - {name: 🤖 AI, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/ChatGPT.png}
  - {name: 🍎 Apple Services, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Apple_1.png}
  - {name: 📢 Google Services, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Google_Search.png}
  - {name: Ⓜ️ Microsoft Services, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Microsoft.png}
  - {name: 💴 PayPal, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/PayPal.png}
  - {name: 🐱 Github, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/GitHub.png}
  # 社交通讯平台
  - {name: 🐦 Discord, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Discord.png} 
  - {name: 📲 Telegram, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Telegram.png}
  # 社交媒体平台
  - {name: 💬 Facebook, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Facebook.png} 
  - {name: 💬 Twitter, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Twitter.png}
  - {name: 🎵 TikTok, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/TikTok_2.png}
  - {name: 📹 YouTube, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/YouTube.png}
  # 娱乐平台
  ## 游戏平台
  - {name: 🎮 GlobalGames, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Game.png}
  - {name: 🎮 ChinaGames, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Game.png}
  ## 音乐平台
  - {name: 🎵 Spotify, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Spotify.png}
  ## 影视
  - {name: 📽️ Disney+, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Disney.png}
  - {name: 🎞️ Max, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/HBO_Max.png}
  - {name: 🎥 Netflix, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Netflix.png}
  - {name: 🙈 GlobalMedia, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Streaming.png}
  # 国外代理
  - {name: 🪜 Proxy, type: select, proxies: [🚀 策略选择, 🎯 Direct, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png}
  # 国内直连
  - {name: 🔗 China, type: select, proxies: [🎯 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Direct.png}
  - {name: 🛑 Reject, type: select, proxies: [REJECT, REJECT-DROP], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Reject.png}
  - {name: 🎯 Direct, type: select, proxies: [DIRECT], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Direct.png}
  
  # ----------------国家或地区策略组--------------------
  # 时延优选策略组(url-test)，即按照 url 测试结果使用延迟最低的节点；测试后容差大于 50ms 才会切换到延迟低的那个节点；未选择到当前策略组时不会进行延迟测试；筛选出“香港”节点，支持正则表达式
  ## Africa(非洲)
  - {name: 🇮🇳 India, <<: *urltest, filter: *FilterIN, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/India.png}
  ## America(美洲)
  - {name: 🇨🇦 Canada, <<: *urltest, filter: *FilterCA, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/CA.png}
  - {name: 🇺🇸 United States, <<: *urltest, filter: *FilterUS, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/US.png}
  ## Asia(亚洲)
  - {name: 🇭🇰 Hong Kong, <<: *urltest, filter: *FilterHK, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/HK.png}
  - {name: 🇯🇵 Japan, <<: *urltest, filter: *FilterJP, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/JP.png}
  - {name: 🇰🇷 Korea, <<: *urltest, filter: *FilterKR, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/KR.png}
  - {name: 🇸🇬 Singapore, <<: *urltest, filter: *FilterSG, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/SG.png}
  - {name: 🇨🇳 Taiwan, <<: *urltest, filter: *FilterTW, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/TW.png}
  ## Europe(欧洲)
  - {name: 🇬🇧 Britain, <<: *urltest, filter: *FilterUK, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/UK.png}
  - {name: 🇫🇷 France, <<: *urltest, filter: *FilterFR, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/FR.png}
  - {name: 🇩🇪 Germany, <<: *urltest, filter: *FilterDE, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/DE.png}


# -------------------------------------
# 路由规则
# -------------------------------------
# 远程规则锚点 [每小时更新一次订阅规则，更新规则时使用直连策略],默认格式为yaml，可以更改为text。
rule-anchor:
    ip: &ip {type: http, behavior: ipcidr,interval: 86400, format: yaml}
    domain: &domain {type: http, behavior: domain, interval: 86400, format: yaml}
    domain2: &domain2 {type: http, behavior: domain, interval: 86400, format: mrs}
    domain3: &domain3 {type: http, behavior: domain, interval: 86400, format: text}
    classical: &classical {type: http, behavior: classical, interval: 86400, format: yaml}
    classical2: &classical2 {type: http, behavior: classical, interval: 86400, format: mrs}

# -------------------------------------
# 规则集
rule-providers:
  # 外部控制
  ExternalControl:
    type: http
    behavior: classical
    format: yaml
    path: ./ruleset/externalcontrol.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Clash.Meta/ExternalControl/ExternalControl-Classical.yaml"
    interval: 86400
  
  # 本地网络
  Lan:
    <<: *classical
    path: ./ruleset/lan.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan_No_Resolve.yaml"

  # 服务平台
  ## CDN 服务
  CDN:
    <<: *classical
    path: ./ruleset/cdn.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Clash.Meta/CDN/CDN-Classical.yaml"
  
  ## 机场服务
  Airport:
    <<: *classical
    path: ./ruleset/airport.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Clash.Meta/Airport/Airport-Classical.yaml"
  
  ## 下载网络
  Download:
    <<: *classical
    path: ./ruleset/download.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download_No_Resolve.yaml"
  
  ## 网络测试
  Networktest:
    <<: *classical
    path: ./ruleset/networktest.yaml
    url: "https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash/networktest.yaml"
  
  ## 国外
  ### 人工智能
  Gemini:
    <<: *classical
    path: ./ruleset/gemini.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Gemini/Gemini_No_Resolve.yaml"
  
  GlobalAI:
    <<: *classical
    path: ./ruleset/globalai.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Rules/Clash.Meta/GlobalAI/GlobalAI-Classical.yaml"

  ### 苹果服务
  Apple:
    <<: *classical
    path: ./ruleset/apple.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml"

  ### Google 服务
  Google:
    <<: *classical
    path: ./ruleset/google.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google_No_Resolve.yaml"
  
  ### 微软服务
  Microsoft:
    <<: *classical
    path: ./ruleset/microsoft.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft_No_Resolve.yaml"

  ##3 支付服务
  PayPal:
    <<: *classical
    path: ./ruleset/paypal.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PayPal/PayPal_No_Resolve.yaml"

  ### 代码托管平台
  Github:
    <<: *domain2
    path: ./ruleset/github.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/raw/universal/github.mrs"

  Gitlab:
    <<: *domain2
    path: ./ruleset/gitlab.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/raw/universal/gitlab.mrs"
  
  # 社交通讯平台
  ## 国外
  Discord:
    <<: *classical
    path: ./ruleset/discord.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Discord/Discord_No_Resolve.yaml"
  
  Telegram:
    <<: *classical
    path: ./ruleset/telegram.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram_No_Resolve.yaml"

  # 社交媒体平台
  ## 国外
  Facebook:
    <<: *classical
    path: ./ruleset/facebook.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Facebook/Facebook_No_Resolve.yaml"
  
  TikTok:
    <<: *classical
    path: ./ruleset/tiktok.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok_No_Resolve.yaml"
  
  Twitter:
    <<: *classical
    path: ./ruleset/twitter.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter_No_Resolve.yaml"
  
  YouTube:
    <<: *classical
    path: ./ruleset/youtube.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube_No_Resolve.yaml"
  
  # 娱乐平台
  ## 国外
  ### 游戏平台
  GlobalGames:
    <<: *classical
    path: ./ruleset/globalgames.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game_No_Resolve.yaml"
  
  ### 音乐平台
  YouTubeMusic:
    <<: *classical
    path: ./ruleset/youtubemusic.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTubeMusic/YouTubeMusic_No_Resolve.yaml"

  Spotify:
    <<: *classical
    path: ./ruleset/spotify.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Spotify/Spotify_No_Resolve.yaml"
  
  ### 影视
  Disney:
    <<: *domain
    path: ./ruleset/disney.yaml
    url: "https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash/disney.yaml"
  
  Max:
    <<: *domain
    path: ./ruleset/max.yaml
    url: "https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash/max.yaml"
  
  Netflix:
    <<: *classical
    path: ./ruleset/netflix.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_Classical_No_Resolve.yaml"
  
  #### 国外媒体
  GlobalMedia:
    <<: *classical
    path: ./ruleset/globalmedia.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical_No_Resolve.yaml"

  ## 国内
  ## 游戏平台
  ChinaGames:
    <<: *domain
    path: ./ruleset/chinagames.yaml
    url: "https://fastly.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash/games-cn.yaml"
    
  # 国外代理
  ## GFW
  GFW:
    <<: *domain2
    path: ./ruleset/gfw.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/releases/download/202412281431/gfw.mrs"
  
  GFWLite:
    <<: *classical
    path: ./ruleset/gfwlite.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Rules/Clash.Meta/GFWLite/GFWLite-Classical.yaml"

  Proxy:
    <<: *domain2
    path: ./ruleset/proxy.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/releases/download/202412290304/proxy.mrs"
    
  # 国内直连
  CN1:
    <<: *classical
    path: ./ruleset/cn1.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China_Classical_No_Resolve.yaml"
  
  CN2:
    <<: *domain2
    path: ./ruleset/cn2.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/releases/download/202412290304/direct.mrs"

# -------------------------------------
# 规则类型-规则-策略组
rules:
  # 外部控制
  - RULE-SET,ExternalControl,🎯 Direct
  # 本地网络
  - RULE-SET,Lan,🎯 Direct
  # 服务平台
  ## CDN 服务
  - RULE-SET,CDN,🎯 Direct
  ## 机场服务
  - RULE-SET,Airport,🛫 Airport
  ## 下载服务
  - RULE-SET,Download,🌐 Download
  ## 网络测试
  - RULE-SET,Networktest,📈 Network Test
  ## 人工智能
  - RULE-SET,Gemini,🤖 AI
  - RULE-SET,GlobalAI,🤖 AI
  ## 苹果服务
  - RULE-SET,Apple,🍎 Apple Services
  ## Google 服务
  - RULE-SET,Google,📢 Google Services
  ## 微软服务
  - RULE-SET,Microsoft,Ⓜ️ Microsoft Services
  ## 支付服务
  - RULE-SET,PayPal,💴 PayPal
  ## 代码托管平台
  - RULE-SET,Github,🐱 Github
  - RULE-SET,Gitlab,🐱 Github
  # 社交通讯平台
  ## 国外
  - RULE-SET,Discord,🐦 Discord
  - RULE-SET,Facebook,💬 Facebook
  - RULE-SET,Telegram,📲 Telegram
  - RULE-SET,Twitter,💬 Twitter
  # 娱乐平台
  ## 国外
  ### 游戏平台
  - RULE-SET,GlobalGames,🎮 GlobalGames
  ### 音乐平台
  - RULE-SET,Spotify,🎵 Spotify
  - RULE-SET,YouTubeMusic,📹 YouTube
  ### 短视频和直播
  - RULE-SET,Disney,📽️ Disney+
  - RULE-SET,Netflix,🎥 Netflix
  - RULE-SET,Max,🎞️ Max
  - RULE-SET,TikTok,🎵 TikTok
  - RULE-SET,YouTube,📹 YouTube
  #### 国外媒体
  - RULE-SET,GlobalMedia,🙈 GlobalMedia
  ## 国内
  ### 游戏平台
  - RULE-SET,ChinaGames,🎮 ChinaGames
  # 国外代理
  - RULE-SET,GFW,🪜 Proxy
  - RULE-SET,GFWLite,🪜 Proxy
  - RULE-SET,Proxy,🪜 Proxy
  # 国内直连
  - RULE-SET,CN1,🔗 China
  - RULE-SET,CN2,🔗 China
  ## IP 规则
  - GEOIP,CN,🔗 China
  # 兜底规则
  - MATCH,🐟 漏网之鱼
