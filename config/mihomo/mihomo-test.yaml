# name: mihomo-test
# 参考的配置
# https://github.com/MetaCubeX/mihomo/blob/Meta/docs/config.yaml
# https://raw.githubusercontent.com/As-Lucky/Lucky/main/Lucky-ClashVerge.yaml
# https://github.com/Moli-X/Resources/raw/main/Clash/Clash.yml
# https://github.com/luestr/ProxyResource/blob/main/Tool/Clash/Config/Clash_Sample_Configuration_By_iKeLee.yaml
# updata：20250807
# updata_url: https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/config/mihomo/Clash.Meta-test.yaml
# repo: https://github.com/LaolunsiG/PCR/tree/main/config/mihomo
# 图标备用: 📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱


# -------------------------------------
# 出站配置
# -------------------------------------
# 代理集-锚点配置
NodeParam: &NodeParam {type: http, interval: 43200, health-check: {enable: true, lazy: false, url: 'http://www.google.com/generate_204', timeout: 3000, interval: 3600}, exclude-filter: "CN"}
# 出站-本地节点
proxies: null

# 出站-代理集
proxy-providers:

  sub1:
    url: "你的机场订阅链接"
    <<: *NodeParam                 # 使用上述锚点配置
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[sub1]" # 为订阅节点添加机场名称前缀
  
  # sub2:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport2.yaml
  #   override:
  #     additional-prefix: "[sub2]"
  
  # sub3:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport3.yaml
  #   override:
  #     additional-prefix: "[sub3]"
  
  # sub4:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport4.yaml
  #   override:
  #     additional-prefix: "[sub4]"
  
  # sub5:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport5.yaml
  #   override:
  #     additional-prefix: "[sub5]"
  
  # sub6:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport6.yaml
  #   override:
  #     additional-prefix: "[sub6]"
  
  # sub7:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport7.yaml
  #   override:
  #     additional-prefix: "[sub7]"
  
  # sub8:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport8.yaml
  #   override:
  #     additional-prefix: "[sub8]"
  
  # sub9:
  #    url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport9.yaml
  #   override:
  #     additional-prefix: "[sub9]"
  
  # sub10:
  #   url: ""
  #   <<: *NodeParam
  #   path: ./proxies/airport10.yaml
  #   override:
  #     additional-prefix: "[sub10]"



# -------------------------------------
# 全局配置
# -------------------------------------
allow-lan: true   # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

# -------------------------------------
mode: rule 
log-level: info         # 日志等级 silent/error/warning/info/debug。
ipv6: true              # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录。
# 控制是否让 Clash 去匹配进程，always 开启，强制匹配所有进程；strict(默认)由 Clash 判断是否开启；off 不匹配进程，推荐在路由器上使用此模式。
find-process-mode: strict
unified-delay: false    # 开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
tcp-concurrent: true    # TCP 并发
# 缓存，存储 select 选择记录，持久化 fake-ip
profile: {store-selected: true, store-fake-ip: true}
global-client-fingerprint: chrome

# -------------------------------------
# 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
external-controller: 127.0.0.1:9090 # API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
secret: "xiaoe"                     # API 的访问密钥

# -------------------------------------
# GEODATA 配置
# GEOIP 数据模式
geodata-mode: false        # 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true 为 dat，此项有默认值 false。
# GEO 文件加载模式，standard：标准加载器；memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: standard
geo-auto-update: true      # 是否自动更新
geo-update-interval: 24    # 单位h（时），每24小时更新一次
geox-url:                  # 自定义 geodata url（更新地址）
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"


# -------------------------------------
# 入站配置
# -------------------------------------
# 代理端口配置
#port: 7890         # http 代理端口
#socks-port: 7891   # SOCKS5 代理服务端口
mixed-port: 7893   # 混合端口，同时支持 HTTP(S) 和 SOCKS5 协议。您可以使用任何支持 HTTP 或 SOCKS 代理的程序连接到这个端口。

# -------------------------------------
# 配置虚拟网卡，在 tun 模式下必须获得 IP 地址。
tun:
  enable: true
  stack: mixed
  device: mihomo.xiaoe
  auto-route: true             # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。
  auto-detect-interface: true  # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡
  dns-hijack: ['any:53']       # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则为 udp://
  strict-route: true           # 防止地址泄漏，并使 DNS 劫持在 Android 上工作。


# -------------------------------------
# DNS配置
# -------------------------------------
# 嗅探域名
# sniffer:
#   enable: true  
#   force-dns-mapping: false     # 对 redir-host 类型识别的流量进行强制嗅探
#   parse-pure-ip: false         # 对所有未获取到域名的流量进行强制嗅探
#   override-destination: false  # 是否使用嗅探结果作为实际访问
#   sniff: {HTTP: {ports: [80, 8080-8880], override-destination: true}, TLS: {ports: [443, 8443]}, QUIC: {ports: [443, 8443]}}
#   force-domain:
#     - +.v2ex.com
#   skip-domain:
#     - Mijia Cloud
#     - '+.apple.com'

# -------------------------------------
hosts:
  'www.google.com.hk': 'www.google.com'
  ## DNS hosts
  dns.alidns.com: [223.5.5.5, 223.6.6.6]
  dns.cloudflare.com: [104.16.133.229, 104.16.132.229]
  dns.google: [8.8.4.4, 8.8.8.8]
  dns.twnic.tw: 101.101.101.101
  doh.pub: [1.12.12.12, 120.53.53.53]
  doh.opendns.com: 146.112.41.2

# -------------------------------------
dns:
  enable: true          # 关闭将使用系统 DNS
  prefer-h3: false      # 是否开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053  # DNS 服务监听，仅支持 udp
  ipv6: false           # 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，默认黑名单，即以下地址不会下发 fakeip 映射用于连接，回到 redir-host 模式。
  fake-ip-filter: ['rule-set:Fakeip-Filter,Private']
  # ----------------DNS 服务配置--------------------
  # 默认 DNS, 用于解析 DNS 服务器 的域名，必须为 IP, 可为加密 DNS
  # 119.29.29.29, 223.5.5.5 , 8.8.8.8, 8.8.4.4
  default-nameserver: [223.5.5.5, 119.29.29.29, 1.1.1.1, system]
  # 专用于节点域名解析的 DNS 服务器，非必要配置项，因为大部分的代理服务器都是 IP 地址
  proxy-server-nameserver:
    - 'https://dns.alidns.com/dns-query'      # 阿里 DNS
    - 'https:/doh.pub//dns-query'             # 腾讯 DNS
    - 'https://dns.cloudflare.com/dns-query'  # Cloudflare
  # 默认的域名解析服务器，解析代理服务器的 IP 地址；匹配直连策略或遇到 IP 规则时会进行本地（直连） DNS 解析，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析。
  nameserver: [system, 223.5.5.5, 119.29.29.29, 1.2.3.4]


# -------------------------------------
# 策略组(代理组)
# -------------------------------------
# 地区节点筛选锚点配置
## Africa
FilterIN: &FilterIN "^(?=.*(🇮🇳|印|班加罗尔|孟买|Mumbai|IN|India))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
## Asia
FilterHK: &FilterHK "^(?=.*(🇭🇰|港|虚通|(?i)HK|Hong))(?!.*(回国|校园|游戏|教育|(?i)GAME|IPV6)).*$"
FilterJP: &FilterJP "^(?=.*((?i) 🇯🇵|日|川日|东京|大阪|泉日|埼玉|JP|Japan))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterKR: &FilterKR "^(?=.*(🇰🇷|韩|韓|首尔|(?i)KR|Korea))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
FilterRU: &FilterRU "^(?=.*(🇷🇺|俄|莫斯科|新西伯利亚|Новосиби́рская|Moscow|RU|Russia))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterSG: &FilterSG "^(?=.*(🇸🇬|新加坡|狮|(?i)SG|Singapore))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
FilterTW: &FilterTW "^(?=.*(🇹🇼|台|(?i)TW|Tai))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
## Australia
FilterAU: &FilterAU "^(?=.*((?i)🇦🇺|澳大|AU|Australia))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
## Europe
FilterFR: &FilterFR "^(?=.*(🇫🇷|法|FR|France))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterIE: &FilterIE "^(?=.*(🇮🇪|爱尔兰|IRL|Ireland))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterDE: &FilterDE "^(?=.*(🇩🇪|德|(?i)DE|Germany))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
FilterNL: &FilterNL "^(?=.*(🇳🇱|荷|NL|Holland|Netherlands))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterTR: &FilterTR "^(?=.*(🇹🇷|土耳其|(?i)TR|TUR|Turkey))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
FilterUK: &FilterUK "^(?=.*(🇬🇧|英|伦敦|(?i)UK|United Kingdom))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
## North America
FilterCA: &FilterCA "^(?=.*(🇨🇦|加拿大|CA|Canada))(?!.*(回国|校园|游戏|教育|久虚|GAME|IPV6)).*$"
FilterUS: &FilterUS "^(?=.*(🇺🇸|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(?i)US|United States))(?!.*(回国|校园|游戏|教育|久虚|(?i)GAME|IPV6)).*$"
## South America

# 地区策略组专用锚点
## 锚点 - 时延优选参数 [每 30 秒一次惰性健康检查，容差 20ms，时延超过 2.5 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &urltest {type: url-test, tolerance: 50, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false, include-all: true}
## 锚点 - 故障转移参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &fallback {type: fallback, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false, include-all: true}
## 锚点 - 负载均衡参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &loadbalance {type: load-balance, strategy: consistent-hashing, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false, include-all: true}
## 锚点 - 手动选择参数 [每 30 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]

# 节点策略组专用锚点
UrlTest1: &urltest1 {type: url-test, tolerance: 50, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}
LoadBalance1: &loadbalance1 {type: load-balance, strategy: consistent-hashing, interval: 60, url: 'https://www.google.com/blank.html', timeout: 2500, max-failed-times: 3, disable-udp: false, lazy: true, hidden: true}

# 功能策略组专用锚点
Select2: &select2 {type: select, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}
UrlTest2: &urltest2 {type: url-test, tolerance: 50, interval: 60, url: 'https://www.google.com/blank.html', timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}
LoadBalance2: &loadbalance2 {type: load-balance, strategy: consistent-hashing, interval: 60, url: 'https://www.google.com/blank.html', disable-udp: false, timeout: 2500, max-failed-times: 3, lazy: true, hidden: false}

# -------------------------------------
# ⏱ All 延迟优选, ⏱ 节点延迟优选01, ⏱ 节点延迟优选02, ⏱ 节点延迟优选03, ⏱ 节点延迟优选04, ⏱ 节点延迟优选05, ⏱ 节点延迟优选06
# 🎛 All 负载均衡, 🎛 节点负载均衡01, 🎛 节点负载均衡02, 🎛 节点负载均衡03, 🎛 节点负载均衡04, 🎛 节点负载均衡05, 🎛 节点负载均衡06
proxy-groups:
  # ----------------节点选择策略组--------------------
    # 模块化选择
  - {name: 🚀 Proxy, type: select, proxies: [🗺 地区选择, 🛫 节点延迟优选, 🛫 节点负载均衡, 🎯 Direct], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Rocket.png}
  - {name: 🛫 节点延迟优选, <<: *select2, proxies: [⏱ All 延迟优选, ⏱ 节点延迟优选01, ⏱ 节点延迟优选02, ⏱ 节点延迟优选03, ⏱ 节点延迟优选04, ⏱ 节点延迟优选05, ⏱ 节点延迟优选06], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png}
  - {name: 🛫 节点负载均衡, <<: *select2, proxies: [🎛 All 负载均衡, 🎛 节点负载均衡01, 🎛 节点负载均衡02, 🎛 节点负载均衡03, 🎛 节点负载均衡04, 🎛 节点负载均衡05, 🎛 节点负载均衡06], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png}
  - {name: 🗺 地区选择, type: select, proxies: [🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Accommodation/Map.png}

  # ----------------节点测试--------------------
  ## 节点延迟优选
  - {name: ⏱ All 延迟优选, <<: *urltest1, include-all: true, icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选01, <<: *urltest1, use: [Sub01], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选02, <<: *urltest1, use: [Sub02], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选03, <<: *urltest1, use: [Sub03], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选04, <<: *urltest1, use: [Sub04], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选05, <<: *urltest1, use: [Sub05], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}
  - {name: ⏱ 节点延迟优选06, <<: *urltest1, use: [Sub06], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Auto_Speed.png}

  ## 节点负载均衡
  - {name: 🎛 All 负载均衡, <<: *loadbalance1, include-all: true, icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡01, <<: *loadbalance1, use: [Sub01], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡02, <<: *loadbalance1, use: [Sub02], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡03, <<: *loadbalance1, use: [Sub03], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡04, <<: *loadbalance1, use: [Sub04], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡05, <<: *loadbalance1, use: [Sub05], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}
  - {name: 🎛 节点负载均衡06, <<: *loadbalance1, use: [Sub06], icon: https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Universal/Available.png}

  # ----------------功能策略组--------------------
  # 兜底策略组
  - {name: 🐟 漏网之鱼, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Final.png} 
  
  # 服务平台
  - {name: ☁ Cloudflare, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Cloudflare.png}
  
  ## 大型服务
  - {name: 🍎 AppleServe, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Apple_1.png}
  - {name: 📢 GoogleServe, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Google_Search.png}
  - {name: Ⓜ️ MicrosoftServe, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Microsoft.png}
  
  ## 人工智能
  - {name: 🤖 AI, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/ChatGPT.png}
  
  - {name: 💴 PayPal, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/PayPal.png}
  
  - {name: 🐱 Github, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/GitHub.png}
  
  ## 网络测试，选择`🎯 Direct`为测试本地网络（运营商网络速度和 IPv6 支持情况），可选择其它节点用于测试机场节点速度和 IPv6 支持情况
  - {name: 📈 NetworkTest, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Speedtest.png}
  
  # 社交通讯平台
  - {name: 🐦 Discord, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Discord.png} 
   
  # 社交媒体平台
  - {name: 💬 Facebook, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Facebook.png} 
  - {name: 💬 Twitter, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Twitter.png}
  - {name: 🎵 TikTok, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/TikTok_2.png}
  - {name: 📹 YouTube, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/YouTube.png}
  
  # 娱乐平台
  ## 插画平台
  - {name: 🖼️ Pixiv, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://raw.githubusercontent.com/LaolunsiG/PCR/main/Icons/xiaoe/pixiv01-500.png}
  
  ## 游戏平台
  - {name: 🎮 GameGlobal, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Steam.png}

  ## 音乐平台
  - {name: 🎵 Spotify, type: select, proxies: [🎯 Direct, 🚀 Proxy, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Spotify.png}
  
  ## 影视
  - {name: 📽️ Disney+, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Disney.png}
  - {name: 🎞️ Max, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/HBO_Max.png}
  - {name: 🎥 Netflix, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Netflix.png}
  - {name: 🙈 MediaGlobal, type: select, proxies: [🚀 Proxy, 🎯 Direct, 🇮🇳 India, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇬🇧 Britain, 🇫🇷 France, 🇩🇪 Germany, 🇳🇱 Netherlands, 🇨🇦 Canada, 🇺🇸 United States], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Streaming.png}

  - {name: 🛑 Reject, type: select, proxies: [REJECT, REJECT-DROP], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Reject.png}
  - {name: 🎯 Direct, type: select, proxies: [DIRECT], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Direct.png}
 
  # ----------------国家或地区策略组--------------------
  ## Africa(非洲)
  - {name: 🇮🇳 India, <<: *urltest, filter: *FilterIN, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/India.png}
  
  ## Asia(亚洲)
  - {name: 🇭🇰 Hong Kong, <<: *urltest, filter: *FilterHK, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/HK.png}
  - {name: 🇯🇵 Japan, <<: *urltest, filter: *FilterJP, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/JP.png}
  - {name: 🇰🇷 Korea, <<: *urltest, filter: *FilterKR, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/KR.png}
  - {name: 🇷🇺 Russia, <<: *urltest, filter: *FilterRU, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/RU.png}
  - {name: 🇸🇬 Singapore, <<: *urltest, filter: *FilterSG, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/SG.png}
  - {name: 🇨🇳 Taiwan, <<: *urltest, filter: *FilterTW, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/TW.png}
  
  ## Australia
  - {name: 🇦🇺 Australia, <<: *urltest, filter: *FilterAU, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/AU.png}
  
  ## Europe(欧洲)
  - {name: 🇬🇧 Britain, <<: *urltest, filter: *FilterUK, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/UK.png}
  - {name: 🇫🇷 France, <<: *urltest, filter: *FilterFR, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/FR.png}
  - {name: 🇩🇪 Germany, <<: *urltest, filter: *FilterDE, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/DE.png}
  - {name: 🇳🇱 Netherlands, <<: *urltest, filter: *FilterNL, icon: https://raw.githubusercontent.com/lipis/flag-icons/main/flags/1x1/nl.svg}
  
  ## North America(北美洲)
  - {name: 🇨🇦 Canada, <<: *urltest, filter: *FilterCA, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/CA.png}
  - {name: 🇺🇸 United States, <<: *urltest, filter: *FilterUS, icon: https://fastly.jsdelivr.net/gh//Orz-3/mini@master/Color/US.png}
  
  ## South America(南美洲)


# -------------------------------------
# 路由规则
# -------------------------------------
# 远程规则锚点 [每小时更新一次订阅规则，更新规则时使用直连策略],默认格式为yaml，可以更改为text。
rule-anchor:
    ip: &ip {type: http, behavior: ipcidr,interval: 86400, format: yaml}
    ip2: &ip2 {type: http, behavior: ipcidr,interval: 86400, format: mrs}
    ip3: &ip3 {type: http, behavior: ipcidr,interval: 86400, format: text}
    domain: &domain {type: http, behavior: domain, interval: 86400, format: yaml}
    domain2: &domain2 {type: http, behavior: domain, interval: 86400, format: mrs}
    domain3: &domain3 {type: http, behavior: domain, interval: 86400, format: text}
    classical: &classical {type: http, behavior: classical, interval: 86400, format: yaml}
    classical2: &classical2 {type: http, behavior: classical, interval: 86400, format: text}

# -------------------------------------
# 规则集
rule-providers:
  # fakeip-filter
  Fakeip-Filter:
    <<: *domain2
    path: ./provider/ruleset/fakeip-filter.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/mihomo-ruleset/fakeip-filter.mrs"
  
  # 外部控制
  ExternalControl:
    <<: *classical
    path: ./provider/ruleset/externalcontrol.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/rule/mihomo/ExternalControl/ExternalControl-Classical.yaml"
  
  # 本地网络
  Private:
    <<: *domain2
    path: ./provider/ruleset/private.mrs
    url: "https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/private.mrs"

  Privateip:
    <<: *ip2
    path: ./provider/ruleset/privateip.mrs
    url: "https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/privateip.mrs"
    
  # 服务平台
  Cloudflare:
    <<: *classical
    path: ./provider/ruleset/cloudflare.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Cloudflare/Cloudflare_No_Resolve.yaml"
  
  ## CDN 服务
  CDN:
    <<: *classical
    path: ./provider/ruleset/cdn.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/rule/mihomo/CDN/CDN-Classical.yaml"
  
  ## 直连软件
  Applications:
    <<: *classical
    path: ./provider/ruleset/applications.yaml
    url: "https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/applications.yaml"
  
  ## 网络测试
  Networktest:
    <<: *classical
    path: ./provider/ruleset/networktest.yaml
    url: "https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/networktest.yaml"
  
  ## 国外
  ### 人工智能
  AIGlobal:
    <<: *domain2
    path: ./provider/ruleset/aiglobal.yaml
    url: "https://raw.githubusercontent.com/DustinWin/ruleset_geodata/mihomo-ruleset/ai.mrs"

  Gemini:
    <<: *classical
    path: ./provider/ruleset/gemini.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gemini/Gemini_No_Resolve.yaml"

  ### 苹果服务
  Apple:
    <<: *classical
    path: ./provider/ruleset/apple.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml"

  ### Google 服务
  Google:
    <<: *classical
    path: ./provider/ruleset/google.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google_No_Resolve.yaml"
  
  ### 微软服务
  Microsoft:
    <<: *classical
    path: ./provider/ruleset/microsoft.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft_No_Resolve.yaml"

  ## 支付服务
  PayPal:
    <<: *classical
    path: ./provider/ruleset/paypal.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PayPal/PayPal_No_Resolve.yaml"

  ### 代码托管平台
  Github:
    <<: *domain2
    path: ./provider/ruleset/github.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/raw/universal/github.mrs"

  Gitlab:
    <<: *domain2
    path: ./provider/ruleset/gitlab.mrs
    url: "https://github.com/xixu-me/rulesets-for-META/raw/universal/gitlab.mrs"
  
  # 社交通讯平台
  ## 国外
  Discord:
    <<: *classical
    path: ./provider/ruleset/discord.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Discord/Discord_No_Resolve.yaml"
  
  Telegram:
    <<: *classical
    path: ./provider/ruleset/telegram.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram_No_Resolve.yaml"

  # 社交媒体平台
  ## 国外
  Facebook:
    <<: *classical
    path: ./provider/ruleset/facebook.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Facebook/Facebook_No_Resolve.yaml"

  Twitter:
    <<: *classical
    path: ./provider/ruleset/twitter.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter_No_Resolve.yaml"
  
  YouTube:
    <<: *domain2
    path: ./provider/ruleset/youtube.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/mihomo-ruleset/youtube.mrs"
  
  # 娱乐平台
  ## 插画
  Pixiv:
    <<: *classical
    path: ./provider/ruleset/pixiv.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Pixiv/Pixiv_No_Resolve.yaml"
  
  ## 游戏平台
  Steam:
    <<: *classical
    path: ./provider/ruleset/steam.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SteamCN/SteamCN_No_Resolve.yaml"

  ### 代理
  GameGlobal1:
    <<: *classical
    path: ./provider/ruleset/gameglobal1.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game_No_Resolve.yaml"
  
  ### 直连
  GameGlobal2:
    <<: *classical
    path: ./provider/ruleset/gameglobal2.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/rule/mihomo/GameDirect/GameDirect-Classical.yaml"

  ## 音乐平台
  YouTubeMusic:
    <<: *classical
    path: ./provider/ruleset/youtubemusic.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTubeMusic/YouTubeMusic_No_Resolve.yaml"

  Spotify:
    <<: *classical
    path: ./provider/ruleset/spotify.yaml
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify_No_Resolve.yaml"
  
  ## 影视
  Disney:
    <<: *domain2
    path: ./provider/ruleset/disney.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/mihomo-ruleset/disney.mrs"
  
  Max:
    <<: *domain2
    path: ./provider/ruleset/max.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/mihomo-ruleset/max.mrs"
  
  Netflix:
    <<: *domain2
    path: ./provider/ruleset/netflix.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/mihomo-ruleset/netflix.mrs"

  ### 综合国外媒体
  MediaGlobal:
    <<: *domain2
    path: ./provider/ruleset/media.yaml
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/media.mrs"
  MediaGlobalIP:
    <<: *ip2
    path: ./provider/ruleset/mediaip.yaml
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/mediaip.mrs"

  # 综合国外代理
  ## GFW
  GFWLite:
    <<: *classical
    path: ./provider/ruleset/gfwlite.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/rule/mihomo/GFWLite/GFWLite-Classical.yaml"

  Proxy:
    <<: *domain2
    path: ./provider/ruleset/proxy.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/proxy.mrs"

  TLD-Proxy:
    <<: *domain2
    path: ./provider/ruleset/tld-proxy.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/tld-proxy.mrs"
    
  # 综合国内直连
  CNLite:
    <<: *classical
    path: ./provider/ruleset/chinalite.yaml
    url: "https://raw.githubusercontent.com/LaolunsiG/PCR/main/rule/mihomo/ChinaLite/ChinaLite-Classical.yaml"

  CN:
    <<: *domain2
    path: ./provider/ruleset/cn.yaml
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/cn.mrs"

  CNIP:
    <<: *ip2
    path: ./provider/ruleset/cnip.yaml
    url: "https://github.com/DustinWin/ruleset_geodata/raw/refs/heads/mihomo-ruleset/cnip.mrs"


# -------------------------------------
# 规则类型-规则-策略组
rules:
  # 外部控制
  - RULE-SET,ExternalControl,🎯 Direct
  # 本地网络
  - RULE-SET,Private,🎯 Direct
  - RULE-SET,Privateip,🎯 Direct,no-resolve
  # 服务平台
  - RULE-SET,Cloudflare,☁ Cloudflare
  ## CDN 服务
  - RULE-SET,CDN,🎯 Direct
  ## 直连软件
  - RULE-SET,Applications,🎯 Direct
  ## 网络测试
  - RULE-SET,Networktest,📈 NetworkTest
  ## 人工智能
  - RULE-SET,Gemini,🤖 AI
  - RULE-SET,AIGlobal,🤖 AI
  ## 苹果服务
  - RULE-SET,Apple,🍎 AppleServe
  ## Google 服务
  - RULE-SET,Google,📢 GoogleServe
  ## 微软服务
  - RULE-SET,Microsoft,Ⓜ️ MicrosoftServe
  ## 支付服务
  - RULE-SET,PayPal,💴 PayPal
  ## 代码托管平台
  - RULE-SET,Github,🐱 Github
  - RULE-SET,Gitlab,🐱 Github
  # 社交通讯平台
  ## 国外
  - RULE-SET,Telegram,🚀 Proxy
  - RULE-SET,Discord,🐦 Discord
  - RULE-SET,Facebook,💬 Facebook
  - RULE-SET,Twitter,💬 Twitter
  # 娱乐平台
  ## 插画站
  - RULE-SET,Pixiv,🖼️ Pixiv
  ## 游戏平台
  - RULE-SET,Steam,🎮 GameGlobal
  - RULE-SET,GameGlobal1,🎮 GameGlobal
  - RULE-SET,GameGlobal2,🎮 GameGlobal
  ## 音乐平台
  - RULE-SET,Spotify,🎵 Spotify
  - RULE-SET,YouTubeMusic,📹 YouTube
  ## 短视频和直播
  - RULE-SET,Disney,📽️ Disney+
  - RULE-SET,Netflix,🎥 Netflix
  - RULE-SET,Max,🎞️ Max
  - RULE-SET,YouTube,📹 YouTube
  ### 综合国外媒体
  - RULE-SET,MediaGlobal,🙈 MediaGlobal
  - RULE-SET,MediaGlobalIP,🙈 MediaGlobal,no-resolve
  # 综合国外代理
  - RULE-SET,GFWLite,🚀 Proxy
  - RULE-SET,Proxy,🚀 Proxy
  - RULE-SET,TLD-Proxy,🚀 Proxy
  # 综合国内直连
  - RULE-SET,CNLite,🎯 Direct
  - RULE-SET,CN,🎯 Direct
  - RULE-SET,CNIP,🎯 Direct,no-resolve
  # 兜底规则
  - MATCH,🐟 漏网之鱼