# name：XiaoE_Loon
# 参考配置
# 1. https://github.com/SANYIMOE/Quan_Shado_Conf/blob/master/conf/loon.conf
# 2. https://github.com/HoCooo/Loon/blob/main/LoonLite.conf
# 3. https://gitlab.com/lodepuly/vpn_tool/-/tree/master/Tool/Loon/Config/zh-CN?ref_type=heads
# updata：2024-09-17
# updata_log(更新日志): 修改策略组及其图标，部分配置位置修改。
# updata_url: https://raw.githubusercontent.com/LaolunsiG/XiaoE_PR/main/Config_File/Loon/XiaoE_Loon.conf
# repo: https://github.com/LaolunsiG/XiaoE_PCR/main/Config_File/Loon/XiaoE_Loon.conf
# 图标备用: 📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱

[General]
# 全局配置
# udp 配置
# 是否禁用 stun 协议的 udp 数据，禁用后可以有效解决 webrtc 的 ip 泄露
disable-stun = true
allow-udp-proxy = false

# Wi-Fi 访问
# 是否允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = false       
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
mitm-on-wifi-access = false

# GEODATA 文件
geoip-url = https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb

# 节点相关配置
# 一个节点连接失败几次后会进行节点切换，默认 3 次
switch-node-after-failure-times = 2
# 测速链接
# 节点测速链接: http://www.gstatic.com/generate_204；http://www.google.com/generate_204; 
# 直连测速链接: http://www.v2ex.com/generate_204；http://wifi.vivo.com.cn/generate_204; 
# 代理测试
proxy-test-url = http://www.google.com/generate_204
# 直连测试
internet-test-url = http://wifi.vivo.com.cn/generate_204
# 测速超时 (s)
test-timeout = 2

# 解析器
# 目前常用的解析脚本由SubStore提供
resource-parser = https://gitlab.com/sub-store/Sub-Store/-/releases/permalink/latest/downloads/sub-store-parser.loon.min.js

# 策略切换时关闭连接
disconnect-on-policy-change = true

# 入站配置
# 网络接口：指定流量使用哪个网络接口进行转发，目前包含三种模式:
# Auto: 系统自动分配
# Cellular: 在WiFi和蜂窝数据都开启的情况下指定使用蜂窝网络
# Performace: 在WiFi和蜂窝数据都开启的情况下使用最优的网络接口
# Balance: 在WiFi和蜂窝数据都开启的情况下，均衡使用网络接口
interface-mode = auto

# skip-proxy 则和 HTTP Proxy 有关，如果配置了该参数，那么所配置的这些IP段、域名将不会转发到 Loon，而是由系统处理（跳过某个域名或者IP段）。
skip-proxy = 127.0.0.1,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,100.64.0.0/10,localhost,*.local,passenger.t3go.cn,passenger.t3go.cn
# bypass-tun 和 TUN 有关，如果配置了该参数，那么所配置的这些 IP 段、域名就会不交给 Loon 来处理，系统直接处理。
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32

# 域名拦截行为，域名拒绝规则执行的阶段
# DNS：使用 LoopbackIP、No Answer 或 NXDomain 的方式阻止 DNS 查询以达到拦截请求的目的
# Request：在请求转发阶段拦截请求
domain-reject-mode = DNS
# 在 DNS 阶段拒绝域名时采用的方式
# LOOPBACKIP：回环 IP
# NOANSWER：DNS 响应为空
# NXDOMAIN：错误码为 3 的 DNS 响应
dns-reject-mode = LOOPBACKIP

# DNS 配置
# 是否允许 IPV6 的请求，开启后会进行 DNS AAAA 记录查询，并且优先使用 IPV6 的 IP
ipv6 = false
# 域名嗅探
sni-sniffing = true
# real-ip 指定的域名将不返回 fake ip 响应，直接将 dns 请求发往目标 dns 服务器，解决一些 ip 请求无法匹配域名类规则的问题。
real-ip = msftconnecttest.com,msftncsi.com,*.msftconnecttest.com,*.msftncsi.com,*.srv.nintendo.net,*.stun.playstation.net,xbox.*.microsoft.com,*.xboxlive.com,*.battlenet.com.cn,*.battlenet.com,*.blzstatic.cn,*.battle.ne

# 在同时配置了加密 DNS 和常规 DNS 服务器时，只会进行加密 DNS 查询，会并发向所有有效的 DNS 服务器发起查询，使用响应最快的查询结果。
# udp 类的 dns 服务器（传统 DNS 服务），用‘,’隔开多个服务器，system 表示系统 dns，dns-server = 119.29.29.29,system
dns-server = 223.5.5.5,119.29.29.29,1.2.4.8
# 加密 DNS
# DoH server，标准的 url 格式，以 , 分割多个地址
doh-server = https://1.12.12.12/dns-query,https://223.5.5.5/dns-query,https://8.8.8.8/dns-query
# DoH3 server，标准的 url 格式，以 , 分割多个地址，doh3-server = h3://223.5.5.5/dns-query,h3://8.8.8.8/dns-query
# DoQ server，以 quic:// 开头，以 , 分割多个地址，默认端口 784，doq-server = quic://example.com:784

# DNS 映射
[host]
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.weixin.com = server:119.28.28.28
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29
*.bilibili.com = server:119.29.29.29
*testflight.apple.com = server:8.8.4.4
mtalk.google.com = 108.177.125.188
dl.google.com = server:119.29.29.29
dl.l.google.com = server:119.29.29.29

# 出站配置
## 出站-本地节点
[Proxy]

## 出站-订阅节点(远程节点)
[Remote Proxy]
机场1 =
机场2 =
机场3 =
机场4 = 
机场5 =

# 策略组(代理组)
# 代理分组类型：
## select: 手动切换节点。
## url-test: 自动切换延迟最低节点。
    # url：测速的url，loon会向该url发起header请求
    # interval：测速间隔时间，单位秒
    # tolerance：容差，如果当前测速后的最优节点和之前最优节点的测速相差小于tolerance，将不会进行节点切换，单位毫秒
## fallback: 节点挂掉时自动切换其他可用节点。
    # url：测速的url，loon会向该url发起header请求
    # interval：测速间隔时间，单位秒=
    # max-timeout：最大超时时间，如果一个节点测速超过了这个值，就将该节点认作为不可用节点，不会进行排序，单位毫秒
## load-balance: 不同规则的请求使用分组里的不同节点进行连接。
    # url：测速的url，loon会向该url发起header请求
    # interval：测速间隔时间，单位秒
    # max-timeout：最大超时时间，如果一个节点测速超过了这个值，就将该节点认作为不可用节点，不会进行排序，单位毫秒
    # algorithm：负载均衡算法
    ## Random：随机选择子策略
    ## PCC：基于Random，不同于Random，PCC会让相同主机名的请求锁定同一节点
    ## Round-Robin：轮询选择子策略

# 代理分组通用设置参数：
## url：测速的url，loon会向该url发起header请求
## interval：测速间隔时间，单位秒
## img-url：显示图标
# 测速链接
## 节点测速链接: http://www.gstatic.com/generate_204；http://www.google.com/generate_204; 
## 直连测速链接: http://www.v2ex.com/generate_204；http://wifi.vivo.com.cn/generate_204; 

# 地区节点筛选，可以使用正则表达式
[Remote Filter]
香港 = NameRegex, FilterKey = "(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$"
台湾 = NameRegex, FilterKey = "^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
韩国 = NameRegex, FilterKey = "(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$"
日本 = NameRegex, FilterKey = "(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$"
新加坡 = NameRegex, FilterKey = "(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$"
加拿大 = NameRegex, FilterKey = "^(?=.*(🇨🇦|加拿大|多伦多|温哥华|蒙特利尔|卡尔加里|渥太华|魁北克|埃德蒙顿|温尼伯|哈利法克斯|萨斯卡通|维多利亚|哈密尔顿|canada|can))(?!(.*(回国|校园|游戏|🎮|game))).*$"
美国 = NameRegex, FilterKey = "(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$"
俄罗斯 = NameRegex, FilterKey = "🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什"
英国 = NameRegex, FilterKey = "🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰"
德国 = NameRegex, FilterKey = "^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
印度 = NameRegex, FilterKey = "🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India"

# 代理链
[Proxy Chain]

[Proxy Group]
🚀 策略选择 = select, 🛫 机场节点优选,🛫 机场负载均衡,🗺 地区选择,🎣 钓鱼机场,🌐 全球直连, url = http://www.google.com/generate_204, img-url = https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Rocket.png
# 模块化选择
🗺 地区选择 = select, 🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,🌐 全球直连, url = http://www.google.com/generate_204, img-url = https://fastly.jsdelivr.net/gh/Semporia/Hand-Painted-icon@master/Accommodation/Map.png
🛫 机场节点优选 = select, ⏱ Payment-钓鱼, ⏱ Payment1,⏱ Payment2,⏱ Free1,⏱ Free2,⏱ Free3,⏱ Free4,🌐 全球直连, url = http://www.google.com/generate_204, img-url=https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png
🛫 机场负载均衡 = select, 🎛 Payment-钓鱼, 🎛 Payment1,🎛 Payment2,🎛 Free1,🎛 Free2,🎛 Free3,🎛 Free4,🌐 全球直连, url = http://www.google.com/generate_204, img-url=https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Airport.png

# 机场测试
## 延迟优选（url-test）
⏱ Payment-钓鱼 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Payment1 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Payment2 = url-test, 机场1, Payment-pithrcia, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Free1 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Free2 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Free3 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
⏱ Free4 = url-test, 机场1, tolerance = 20,interval = 60,url = http://www.google.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png

# 兜底策略组
🐟 漏网之鱼 = select,🚀 策略选择,🌐 全球直连,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
# 服务平台
## 人工智能
🤖️ 人工智能 = select,🇺🇸 美国,🇬🇧 英国,🇩🇪 德国,🇨🇦 加拿大,🇸🇬 新加坡,🇨🇳 台湾,🇰🇷 韩国,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png
🪙 Paypal = select,🇺🇸 美国,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇮🇳 印度,🚀 策略选择,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png
## 下载服务
💳 Download = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Download.png
Ⓜ️ 微软服务 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
🍎 苹果服务 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png
# 社交通讯平台
📲 Telegram = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
📄 Twitter = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png
👤 Facebook = select,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,🚀 策略选择,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png
📖 Reddit = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ULB.png
🐦 Discord = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Discord.png
🍟 新浪微博 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Weibo.png
# 流媒体(短视频&影视)
📹 YouTube = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
🎥 Netflix = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png
🎬 Disney+ = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney.png
🎻 Spotify = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
📽 哔哩哔哩 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili.png
🍿 国外媒体 = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png
🍔 国内媒体 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DomesticMedia.png
# 游戏
🎮 游戏平台 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇰🇷 韩国,🇯🇵 日本,🇸🇬 新加坡,🇷🇺 俄罗斯,🇩🇪 德国,🇨🇦 加拿大,🇺🇸 美国,🇮🇳 印度,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png
🚫 全球拦截 = select,REJECT,REJECT-DROP,url = http://www.google.com/generate_204,img-url = https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Reject.png
🌐 全球直连 = select,DIRECT,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Direct.png

# ----------------国家或地区策略组--------------------
# 手动选择节点
🇭🇰 香港 = select,⏱ 香港优选节点,🎛 香港负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
🇨🇳 台湾 = select,⏱ 台湾优选节点,🎛 台湾负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
🇰🇷 韩国 = select,⏱ 韩国优选节点,🎛 韩国负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
🇯🇵 日本 = select,⏱ 日本优选节点,🎛 日本负载均衡,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
🇸🇬 新加坡 = select,⏱ 新加坡优选节点,🎛 新加坡负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
🇷🇺 俄罗斯 = select,⏱ 俄罗斯优选节点,🎛 俄罗斯负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/RU.png
🇩🇪 德国 = select,⏱ 德国优选节点,🎛 德国负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/DE.png
🇬🇧 英国 = select,⏱ 英国优选节点,🎛 英国负载均衡,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/UK.png
🇨🇦 加拿大 = select,⏱ 加拿大优选节点,🎛 加拿大负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/CA.png
🇺🇸 美国 = select,⏱ 美国优选节点,🎛 美国负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
🇮🇳 印度 = select,⏱ 印度优选节点,🎛 印度负载均衡,url = http://www.google.com/generate_204,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/IN.png

# 优选节点策略组(url-test)
⏱ 香港优选节点 = url-test,香港,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
⏱ 台湾优选节点 = url-test,台湾,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
⏱ 韩国优选节点 = url-test,韩国,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
⏱ 日本优选节点 = url-test,日本,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
⏱ 新加坡优选节点 = url-test,新加坡,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
⏱ 俄罗斯优选节点 = url-test,俄罗斯,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/RU.png
⏱ 加拿大优选节点 = url-test,加拿大,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/CA.png
⏱ 美国优选节点 = url-test,美国,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
⏱ 英国优选节点 = url-test,英国,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/UK.png
⏱ 德国优选节点 = url-test,德国,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/DE.png
⏱ 印度优选节点 = url-test,印度,url = http://www.google.com/generate_204,interval = 60,tolerance = 20,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/IN.png

# 负载均衡策略组（load-balance）
🎛 香港负载均衡 = load-balance,香港,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
🎛 台湾负载均衡 = load-balance,台湾,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
🎛 韩国负载均衡 = load-balance,韩国,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
🎛 日本负载均衡 = load-balance,日本,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
🎛 新加坡负载均衡 = load-balance,新加坡,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
🎛 俄罗斯负载均衡 = load-balance,俄罗斯,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/RU.png
🎛 加拿大负载均衡 = load-balance,加拿大,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/CA.png
🎛 美国负载均衡 = load-balance,美国,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
🎛 英国负载均衡 = load-balance,英国,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/UK.png
🎛 德国负载均衡 = load-balance,德国,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/DE.png
🎛 印度负载均衡 = load-balance,印度,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/IN.png

# 负载均衡（load-balance）
🎛 Payment-钓鱼 = load-balance,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Payment1 = load-balance,Payment-tblack,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Payment2 = load-balance,payment-超级机场,Payment-pithrcia,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Free1 = load-balance,Free-空想家-SSR,Free-空想家-vmess,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Free2 = load-balance,Free-freenode,Free-Hello_World,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Free3 = load-balance,Free-moist,Free-胖虎订阅,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
🎛 Free4 = load-balance,free-冠希订阅,url = http://www.google.com/generate_204,interval = 180,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png

# 路由规则
  
# Loon 内置规则策略：
# 直连
## DIRECT：直连。连接不经过任何代理服务器。
# 拒绝
## REJECT：拒绝 返回200 响应空的响应体)
## REJECT-IMG：拒绝 返回200和一个 1px GIF 的响应体)
## REJECT-DICT：拒绝 返回200和内容为空的 JSON 的响应体)
## REJECT-ARRY ：拒绝 返回200和一个内容为空的 JSON 数组)
## REJECT-DROP：拒绝 拒绝并丢弃请求，且不会返回任何响应。因为部分程序有着十分暴力的重试逻辑，连接失败后会立刻进行重试，导致请求风暴)
# 代理
## 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。

# 规则匹配的优先级：
# 整体
## 1. 排在前面的优先级高于排在后面的；
## 2. 同时本地规则 > 插件中的规则 > 订阅规则(远程规则)，
# 特殊
## 1. 域名规则优先于IP规则。

## 本地规则
[Rule]
DOMAIN-KEYWORD,mubu,DIRECT
FINAL,🐟 漏网之鱼

## 订阅规则(远程规则)/规则集
[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Lan/Lan.list, policy=🌐 全球直连, tag=Lan, enabled=true
# 隐私保护
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy.list, policy=🚫 全球拦截, tag=隐私保护1, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy_Domain.list, policy=🚫 全球拦截, tag=隐私保护2, enabled=false
# 广告拦截
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite.list, policy=🚫 全球拦截, tag=广告拦截1, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite_Domain.list, policy=🚫 全球拦截, tag=广告拦截2, enabled=false
# 服务平台
## 下载服务
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Download/Download.list, policy=💳 Download, tag=下载服务, enabled=true
## 人工智能
https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Shadowrocket/AI/AI_Globle.list, policy=🤖️ 人工智能, tag=人工智能, enabled=true
## 支付平台
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list, policy=🪙 Paypal, tag=Paypal, enabled=true
## 微软服务
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list, policy=Ⓜ️ 微软服务, tag=Microsoft, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list, policy=🍎 苹果服务, tag=苹果服务1, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppStore/AppStore.list, policy=🍎 苹果服务, tag=苹果服务2, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleProxy/AppleProxy.list, policy=🚀 策略选择, tag=AppleProxy, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list, policy=🚀 策略选择, tag=Google, enabled=true
# 社交通讯平台
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list, policy=📲 Telegram, tag=Telegeam, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list, policy=📄 Twitter, tag=Twitter, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list, policy=👤 Facebook, tag=Facebook, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Reddit/Reddit.list, policy=📖 Reddit, tag=Reddit, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Discord/Discord.list, policy=🐦 Discord, tag=Discord, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Weibo/Weibo.list, policy=🍟 新浪微博, tag=微博, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/WeChat/WeChat.list, policy=🌐 全球直连, tag=WeChat, enabled=true
# 娱乐
## 游戏
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/PlayStation/PlayStation.list, policy=🎮 游戏平台, tag=Playstation, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Epic/Epic.list, policy=🎮 游戏平台, tag=Epic, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Sony/Sony.list, policy=🎮 游戏平台, tag=Sony, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Steam/Steam.list, policy=🎮 游戏平台, tag=Steam, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Nintendo/Nintendo.list, policy=🎮 游戏平台, tag=Nintendo, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/WanMeiShiJie/WanMeiShiJie.list, policy=🎮 游戏平台, tag=WanMeiShiJie, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Blizzard/Blizzard.list, policy=🎮 游戏平台, tag=Blizzard, enabled=true
## 音乐
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list, policy=🎻 Spotify, tag=Spotify, enabled=true
## 流媒体(影视&短视频)
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list, policy=📹 YouTube, tag=Youtube, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTubeMusic/YouTubeMusic.list, policy=📹 YouTube, tag=YouTube 音乐, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list, policy=🎥 Netflix, tag=Netflix, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list, policy=🎬 Disney+, tag=Disney, enabled=true
https://github.com/LaolunsiG/XiaoE_PCR/raw/main/rules/Shadowrocket/GlobalMedia/GlobalMedia_Classical.list, policy=🍿 国外媒体, tag=国外媒体, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBili/BiliBili.list, policy=📽 哔哩哔哩, tag=哔哩哔哩, enabled=true
https://github.com/LaolunsiG/XiaoE_PCR/raw/main/rules/Shadowrocket/ChinaMedia/ChinaMedia_Classical.list, policy=🍔 国内媒体, tag=国内媒体, enabled=true
# 国外代理
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy.list, policy=🚀 策略选择, tag=代理域名1, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Proxy_Domain.list, policy=🚀 策略选择, tag=代理域名2, enabled=true
# 国内直连
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMax/ChinaMax_No_IPv6.list, policy=🌐 全球直连, tag=国内直连1, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMax/ChinaMax_Domain.list, policy=🌐 全球直连, tag=国内直连2, enabled=false
https://github.com/LaolunsiG/XiaoE_PCR/raw/main/rules/Shadowrocket/China/CN-IP.list, policy=🌐 全球直连, tag=CN-IP, enabled=true

# 本地重写
[URL Rewrite]
#enable = false
^https?://(www.)?(g|google).cn 302 https://www.google.com
# 京东比价Fix
#^https?:\/\/api\.m\.jd.com\/client\.action\?functionId=start reject-200

# 订阅重写
[Remote Rewrite]

# 脚本
[script]

# 远程脚本
[Remote Script]

# 插件
[Plugin]
https://github.com/LaolunsiG/XiaoE_PCR/raw/main/Module_or_Plugin/Loon/adsense.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/NodeLinkCheck.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/GeoLocation.plugin, tag=GeoLocation-check, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/MediaChecker.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/ReFix.plugin, policy=🚀 策略选择, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/wnCalendar.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Rewrite.plugin, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/HTTPDNS.Block.plugin, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/DNS.plugin, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/General.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Reddit_remove_ads.plugin, enabled=true
https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/Loon.plugin, policy=DIRECT, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/LoonGallery.plugin, policy=香港-公益机场 https://github.com/Cry1ngMan/1, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=🚀 策略选择, enabled=false
https://raw.githubusercontent.com/mphin/ProxyTools/main/loon/plugin/1.1.1.1.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/WARP_Node_Query.plugin, enabled=false
https://raw.githubusercontent.com/mphin/ProxyTools/main/loon/plugin/Loon_Node_tool.plugin, enabled=true
https://raw.githubusercontent.com/mphin/ProxyTools/main/loon/plugin/Loon_Netisp.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/NodeLinkCheck.Plugin, enabled=true
https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/modules/script-hub.loon.plugin, policy=🚀 策略选择, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/BaiduNetDisk_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Spotify_lyrics_translation.plugin, enabled=false
https://raw.githubusercontent.com/app2smile/rules/master/plugin/tieba.plugin, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AllInOne/AllInOne.plugin, enabled=true
https://raw.githubusercontent.com/chengkongyiban/Loon/main/Loon-Gallery/xuexi.plugin, enabled=false
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, enabled=true
https://whatshub.top/plugin/adultraplus.plugin, enabled=false
https://whatshub.top/plugin/AdBlock.plugin, enabled=true
https://whatshub.top/plugin/stsq.plugin, enabled=false

[Mitm]
#enable = true
ca-p12 = 
ca-passphrase = 
skip-server-cert-verify = false
#hostname = *.baidu.com,*.pglstatp-toutiao.com,*.y.qq.com,cccat.io,api.ithome.com,*.google.com.hk,*.google.cn
