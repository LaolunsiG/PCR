# name：XiaoE_Stash
# content: 优选节点，无加密DNS，存在IP规则，可能存在DNS泄露问题。
# 感谢以下配置
# 1.懒人配置
# 2.可莉配置
# 3.https://github.com/Repcz: https://raw.githubusercontent.com/Repcz/Tool/X/Stash/Stash_lite.yaml
# 4.https://github.com/Repcz: https://raw.githubusercontent.com/Repcz/Tool/X/Stash/Stash.yaml
# updata：2024-07-13
# updata_log: 更新了广告规则，这个软件太容易奔溃了，增加了全球拦截的选择项
# updata_url: https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/Config_File/Stash/XiaoE_Stash.yaml
# 图标备用📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱

# tiles部分仅作为本地磁贴的格式模板 可删除
tiles:
  - name: Billboard Hot 100
    icon: 'music.note.list'
    backgroundColor: '#fc5656'
    argument: 'songCount=20'
  - name: jinripingtairebang
    icon: 'text.badge.star'
    backgroundColor: '#FFD700'
    argument: 'platform=微博&count=20'
script-providers:
  jinripingtairebang:
    url: https://raw.githubusercontent.com/deezertidal/Surge_Module/master/files/hotoday.js
  Billboard Hot 100:
    url: https://raw.githubusercontent.com/deezertidal/Surge_Module/master/files/bb100.js

# 锚点-节点订阅的参数 [每12小时更新一次订阅节点，每 600 秒一次健康检查]
# url:机场订阅链接，使用 Clash 链接
# filter:初步筛选需要的节点，可有效减轻路由器压力，支持正则表达式，不筛选可删除此配置项
# health-check:未选择到当前代理集合时，不会进行测试，有多个代理集合时可使用
NodeParam: &NodeParam {type: http, interval: 43200, health-check: {enable: true, lazy: true, url: 'http://www.google.com/generate_204', interval: 600}}

# 本地节点
proxies: null

# 订阅节点(远程节点)
proxy-providers:
  机场1:
    url: ""
    !!merge <<: *NodeParam #使用上述订阅配置
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场0]" # 为订阅节点添加机场名称前缀
  机场2:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场1]"
  机场3:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场2]"
  机场4:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场3]"
  机场5:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场4]"
  机场6:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场5]"
  机场7:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场6]"
  机场8:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场7]"
  机场9:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场8]"
  机场10:
    url: ""
    !!merge <<: *NodeParam
    path: ./proxies/airport1.yaml
    override:
      additional-prefix: "[机场9]"

# 全局配置
# 代理端口
port: 7890 # HTTP(S) 代理服务器端口
socks-port: 7891 # SOCKS5 代理端口
mixed-port: 7892 # 混合端口，HTTP和SOCKS5用一个端口

mode: rule # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
# Stash获取机场流量信息并在主页显示
subscribe-url: https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/Config_File/Stash/XiaoE_Stash.yaml

allow-lan: true # 允许局域网的连接（共享代理）
bind-address: "*"  # 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用

# ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
udp: true # 是否允许 UDP 通过代理，默认为 false
unified-delay: false # 开启统一延迟时，会进行两次延迟测试，以消除连接握手等带来的不同类型节点的延迟差异，可选值 true/false
tcp-concurrent: true  # TCP 并发，可选值 true/false
find-process-mode: strict # 控制是否让 Clash 去匹配进程，always 开启，强制匹配所有进程，strict 默认，由 Clash 判断是否开启，off 不匹配进程，推荐在路由器上使用此模式
global-client-fingerprint: chrome  # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint，目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan

#外部控制器
external-controller: 127.0.0.1:9090  # 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核，API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
secret: "xiaoe" # 自定义 API 的访问密钥
external-ui: ui  # 可以将静态网页资源 (比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui，可以为绝对路径，或者 Clash 工作目录的相对路径
# 自定义外部用户界面下载地址
external-ui-url: 'https://mirror.ghproxy.com/https://github.com/MetaCubeX/Yacd-meta/archive/gh-pages.zip'

# 配置DNS
dns:
  enable: true # 关闭将使用系统 DNS
  listen: 0.0.0.0:1053 # 开启 DNS 服务器监听
  default-nameserver: # 默认 DNS, 用于解析"nameserver"将域名解析为IP地址
    - 119.29.29.29
    - 119.28.28.28
    - system #系统DNs
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - '*.battlenet.com.cn'
    - '*.battlenet.com'
    - '*.blzstatic.cn'
    - '*.battle.net'
  nameserver: #遇到IP规则和使用DIRECT时会用到
    - 114.114.114.114
    - 223.5.5.5
    - 1.1.1.1
    - 8.8.8.8
  # nameserver-policy: # 对部分域名使用单独的 DNS 服务器
    # 'www.baidu.com': 114.114.114.114
    # '+.internal.crop.com': system
    
# 锚点 - 节点筛选组
## 亚洲
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
## 美洲
FilterCA: &FilterCA '^(?=.(🇨🇦|加拿大|多伦多|温哥华|蒙特利尔|卡尔加里|渥太华|魁北克|埃德蒙顿|温尼伯|哈利法克斯|萨斯卡通|维多利亚|哈密尔顿|canada|can))(?!(.(回国|校园|游戏|🎮|game))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
## 欧洲
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|Germany)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
## 非洲
FilterIN: &FilterIN '(?i)🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India'
## 其他
# FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$'
# FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 600 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: true, include-all: true, url: 'http://www.google.com/generate_204'}
# 锚点 - 故障转移参数 [每 600 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 600, lazy: true, hidden: true, include-alls: true, url: 'http://www.google.com/generate_204'}
# 锚点 - 负载均衡参数 [每 600 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, strategy: consistent-hashing, interval: 600, lazy: true, hidden: true, include-all: true, url: 'http://www.google.com/generate_204'}

# 包括的代理和策略组设置
# include-all: true # 包括所有的代理和远程代理集
# use: [] # 使用远程代理集
# proxies: [] # 使用策略组
# use-url: [] # 使用远程订阅节点

# 测速链接: 代理测速：https://www.gstatic.com/generate_204；http://www.google.com/generate_204

proxy-groups:
  # 手动选择(select)国家或地区节点；根据“国家或地区策略组”名称对 `proxies` 值进行增删改，须一一对应
  - {name: 🚀 节点选择, type: select, interval: 600, lazy: true, hidden: false, proxies: [♻️ ALL, 🤣 手动选择, 机场1, 机场2, 机场3, 机场4, 机场5, 机场6, 机场7, 机场8, 机场9, 机场10, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Rocket.png}
  - {name: ♻️ ALL, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, include-all: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png}
  - {name: 🤣 手动选择, type: select, interval: 600, lazy: true, hidden: false, include-all: true, icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Proxy.png}
  - {name: 🐟 漏网之鱼, type: select, interval: 600, lazy: true, hidden: false, proxies: [🚀 节点选择, 🎯 全球直连, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png} 
  # 机场测试
  - {name: 机场1, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场1], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场2, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场2], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场3, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场3], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场4, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场4], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场5, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场5], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场6, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场6], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场7, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场7], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场8, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场8], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场9, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场9], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  - {name: 机场10, type: url-test, tolerance: 20, interval: 600, lazy: true, hidden: false, use: [机场10], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png}
  # 选择`🎯 全球直连`为测试本地网络（运营商网络速度和 IPv6 支持情况），可选择其它节点用于测试机场节点速度和 IPv6 支持情况
  - {name: 📈 网络测试, type: select, proxies: [🤣 手动选择, 🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度]}
  #人工智能
  - {name: 🤖 人工智能, type: select, proxies: [台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度, 🚀 节点选择], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png}
  #下载网络
#  - {name: 🌐 Download,type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Download.png}
  #服务平台
  - {name: Ⓜ️ 微软服务, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png}
  - {name: 📢 谷歌服务, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Google_Search.png}
  - {name: 🍎 苹果服务, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png}
  #社交聊天平台
  - {name: 💬 Facebook, type: select, proxies: [香港, 🚀 节点选择, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png} 
  - {name: 💬 Twitter, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Twitter.png}
  - {name: 📲 电报消息, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Telegram.png}
  - {name: 🐦 Discord, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Discord.png} 
  # 国外社交聊天平台
  - {name: 💬 社交平台(Global), type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Area.png} 
  ## 国内社交聊天平台
  - {name: 💬 社交平台(CN), type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Area.png}
  # 流媒体
  ## 小分流
  - {name: 🎥 奈飞视频, type: select, proxies: [美国, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png}
  - {name: 📽️ 迪士尼+, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney.png}
  - {name: 🎞️ Max, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/HBO_Max.png}
  - {name: 🎬 Prime Video, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Prime_Video_2.png}
  - {name: 🍎 Apple TV+, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_TV_Plus.png}
  - {name: 📹 YouTube, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png}
#  - {name: 🎵 TikTok, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/TikTok_2.png}
  - {name: 📺 哔哩哔哩, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png}
  ##大分流
  - {name: 📺 国内媒体, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingCN.png}
  - {name: 🙈 国外媒体, type: select, proxies: [🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png}
  # 支付平台
  - {name: 💴 PayPal, type: select, proxies: [美国, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度, 🚀 节点选择], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png}
  # 娱乐
  ## 音乐
  - {name: 🎻 Spotify, type: select, proxies: [🎯 全球直连, 🚀 节点选择, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Spotify.png}
  ## 游戏
  - {name: 🎮 游戏平台(Global), type: select, proxies: [🚀 节点选择, 🎯 全球直连, 香港, 台湾, 日本, 韩国, 新加坡, 加拿大, 美国, 英国, 法国, 德国, 印度], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png}
#  - {name: 🎮 游戏平台(CN), type: select, proxies: [🎯 全球直连, 🚀 节点选择], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png}
  # 大分流
  - {name: 🪜 代理域名, type: select, proxies: [🚀 节点选择, 🎯 全球直连], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png}
  - {name: 🔗 直连域名, type: select, proxies: [🎯 全球直连, 🚀 节点选择], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Direct.png}
  - {name: 🛑 全球拦截, type: select, proxies: [REJECT], icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Reject.png}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Direct.png}
  # ----------------国家或地区策略组--------------------
  # 地区节点选择
  # 节点负载均衡(load-balance)，即将请求均匀分配到多个节点上，优点是更稳定，速度可能有提升；将相同顶级域名的请求分配给策略组内的同一个代理节点；推荐在节点复用比较多的情况下使用
  # 自动选择节点(url-test)，即按照 url 测试结果使用延迟最低的节点；测试后容差大于 50ms 才会切换到延迟低的那个节点；未选择到当前策略组时不会进行延迟测试；筛选出“香港”节点，支持正则表达式
  # 亚洲
  - {name: 香港, type: select, proxies: [⏱香港时延优选策略组, 🚥香港故障转移策略组, 🎛香港负载均衡策略组], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png}
  - {name: 台湾, type: select, proxies: [⏱台湾时延优选策略组, 🚥台湾故障转移策略组, 🎛台湾负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png}
  - {name: 日本, type: select, proxies: [⏱日本时延优选策略组, 🚥日本故障转移策略组, 🎛日本负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png}
  - {name: 韩国, type: select, proxies: [⏱韩国时延优选策略组, 🚥韩国故障转移策略组, 🎛韩国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/KR.png}
  - {name: 新加坡, type: select, proxies: [⏱新加坡时延优选策略组, 🚥新加坡故障转移策略组, 🎛新加坡负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png}
  # 美洲
  - {name: 加拿大, type: select, proxies: [⏱加拿大时延优选策略组, 🚥加拿大故障转移策略组, 🎛加拿大负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CA.png}
  - {name: 美国, type: select, proxies: [⏱美国时延优选策略组, 🚥美国故障转移策略组, 🎛美国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png}
  # 欧洲  
  - {name: 英国, type: select, proxies: [⏱英国时延优选策略组, 🚥英国故障转移策略组, 🎛英国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/UK.png}
  - {name: 法国, type: select, proxies: [⏱法国时延优选策略组, 🚥法国故障转移策略组, 🎛法国负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/FR.png}
  - {name: 德国, type: select, proxies: [⏱德国时延优选策略组, 🚥德国故障转移策略组, 🎛德国负载均衡策略组], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/DE.png}
  # 非洲
  - {name: 印度, type: select, proxies: [⏱印度时延优选策略组, 🚥印度故障转移策略组, 🎛印度负载均衡策略组], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IN.png}
  # 时延优选策略组
  ## 亚洲
  - {name: ⏱香港时延优选策略组, !!merge <<: *UrlTest, filter: *FilterHK, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png}
  - {name: ⏱台湾时延优选策略组, !!merge <<: *UrlTest, filter: *FilterTW, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png}
  - {name: ⏱日本时延优选策略组, !!merge <<: *UrlTest, filter: *FilterJP, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png}
  - {name: ⏱韩国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterKR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/KR.png}
  - {name: ⏱新加坡时延优选策略组, !!merge <<: *UrlTest, filter: *FilterSG, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png}
  # 美洲
  - {name: ⏱加拿大时延优选策略组, !!merge <<: *UrlTest, filter: *FilterCA, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CA.png}
  - {name: ⏱美国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterUS, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png}
  ## 欧洲
  - {name: ⏱英国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterUK, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/UK.png}
  - {name: ⏱法国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterFR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/FR.png}
  - {name: ⏱德国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterDE, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DE.png}
  ## 非洲
  - {name: ⏱印度时延优选策略组, !!merge <<: *UrlTest, filter: *FilterIN, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IN.png}
  # 故障转移策略组
  ## 亚洲
  - {name: 🚥香港故障转移策略组, !!merge <<: *FallBack, filter: *FilterHK, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png}
  - {name: 🚥台湾故障转移策略组, !!merge <<: *FallBack, filter: *FilterTW, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png}
  - {name: 🚥日本故障转移策略组, !!merge <<: *FallBack, filter: *FilterJP, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png}
  - {name: 🚥韩国故障转移策略组, !!merge <<: *FallBack, filter: *FilterKR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/KR.png}
  - {name: 🚥新加坡故障转移策略组, !!merge <<: *FallBack, filter: *FilterSG, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png}
  # 美洲
  - {name: 🚥加拿大故障转移策略组, !!merge <<: *FallBack, filter: *FilterCA, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CA.png}
  - {name: 🚥美国故障转移策略组, !!merge <<: *FallBack, filter: *FilterUS, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png}
  ## 欧洲
  - {name: 🚥英国故障转移策略组, !!merge <<: *FallBack, filter: *FilterUK, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/UK.png}
  - {name: 🚥法国故障转移策略组, !!merge <<: *FallBack, filter: *FilterFR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/FR.png}
  - {name: 🚥德国故障转移策略组, !!merge <<: *FallBack, filter: *FilterDE, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DE.png}
  ## 非洲
  - {name: 🚥印度故障转移策略组, !!merge <<: *FallBack, filter: *FilterIN, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IN.png}
  # 负载均衡策略组
  ## 亚洲
  - {name: 🎛香港负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterHK, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png}
  - {name: 🎛台湾负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterTW, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png}
  - {name: 🎛日本负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterJP, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png}
  - {name: 🎛韩国负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterKR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/KR.png}
  - {name: 🎛新加坡负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterSG, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png}
  ## 美洲
  - {name: 🎛加拿大负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterCA, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CA.png}
  - {name: 🎛美国负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterUS, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png}
  ## 欧洲
  - {name: 🎛英国负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterUK, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/UK.png}
  - {name: 🎛法国负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterFR, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/FR.png}
  - {name: 🎛德国负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterDE, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DE.png}
  ## 非洲
  - {name: 🎛印度负载均衡策略组, !!merge <<: *LoadBalance, filter: *FilterIN, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IN.png}

# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略],默认格式为yaml，可以更改为text。
# bahavior：有ipcidr(IP集)、domain(域名集)、classical。
# proxy：经过指定代理进行下载/更新，使用DIRECT（直连）更新，还是代理（PROXY）更新，默认为代理（PROXY）
rule-anchor:
    # format: text(文本)或yaml
    ip: &ip {behavior: ipcidr, interval: 86400, format: yaml}
    domain: &domain {behavior: domain, interval: 86400, format: yaml}
    classical: &classical {behavior: classical, interval: 86400, format: yaml}

# 规则集（yaml 文件每天自动更新）
rule-providers:
  # 下载网络
  Download:
    !!merge <<: *classical
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download_No_Resolve.yaml'
  # 网络测试
  networktest:
    !!merge <<: *classical
    url: 'https://cdn.jsdelivr.net/gh/DustinWin/ruleset_geodata@clash/networktest.yaml'
  # 本地网络
  lan:
    !!merge <<: *classical
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan_No_Resolve.yaml'
  # 人工智能
  人工智能:
    behavior: classical
    format: yaml
    interval: 86400
    url: 'https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Clash_Meta/AI/AI_Global.yaml'
  # 广告拦截
  ad_domain:
    !!merge <<: *domain
    url: 'https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Clash_Meta/AD/AD_Domain.yaml'
  # 隐私保护
  privacy:
    !!merge <<: *classical
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy_Classical_No_Resolve.yaml'
  # 服务平台
  微软服务:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Microsoft.rule
  Apple:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Apple.rule
  AppStore:
    !!merge <<: *classical
    url: https://whatshub.top/rule/AppStore.rule
  AppleProxy:
    !!merge <<: *classical
    url: https://whatshub.top/rule/AppleProxy.rule
  Google服务:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Google.rule
  # 社交媒体
  ## 国外
  TELEGRAM:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Telegram.rule
  TWITTER:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Twitter.rule
  FACEBOOK:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Facebook.rule
  REDDIT:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Reddit.rule
  DISCORD:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Discord.rule
  ## 国内
  新浪微博:
    !!merge <<: *classical
    url: https://whatshub.top/rule/Weibo.rule
  Wechat:
    behavior: classical
    interval: 86400
    format: yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeChat/WeChat_No_Resolve.yaml
  # 游戏平台
  PlayStation:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/PlayStation.rule
  Epic:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Epic.rule
  Sony:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Sony.rule
  Steam:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Steam.rule
  Nintendo:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Nintendo.rule
  WanMeiShiJie:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/WanMeiShiJie.rule
  Blizzard:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Blizzard.rule
  # 支付平台
  PAYPAL:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/PayPal.rule
 # 音乐
  SPOTIFY:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Spotify.rule
  YOUTUBE2:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/YouTubeMusic.rule
  # 流媒体
  ## 国外网络
  YOUTUBE1:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/YouTube.rule
  NETFLIX:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Netflix.rule
  DISNEY+:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Disney.rule
  Twitch:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Twitch.rule
  ### 大分流
  国外媒体:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/ProxyMedia.rule
  ## 国内媒体
  斗鱼:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/Douyu.rule
  哔哩哔哩:
    behavior: classical
    interval: 86400
    url: https://whatshub.top/rule/BiliBili.rule
  ### 大分流
  国内媒体:
    !!merge <<: *classical
    url: 'https://whatshub.top/rule/ChinaMedia.rule'
  # 代理和直连网络大分流
  ## 代理网络
  Proxy_Domain:
    !!merge <<: *domain
    url: 'https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Clash_Meta/Proxy/Proxy_Domain.yaml'
  # 直连网络
  国内直连1:
    !!merge <<: *classical
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China_Classical_No_Resolve.yaml
  国内直连2:
    !!merge <<: *classical
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical_No_Resolve.yaml'

# 规则类型-规则集-策略组(代理组)
rules:
  # 网络测试
  - RULE-SET,networktest,📈 网络测试
  - DOMAIN-KEYWORD,mubu,🎯 全球直连
  # 本地网络
  - RULE-SET,lan,🎯 全球直连,no-resolve
  # 广告拦截
  - RULE-SET,ad_domain,🛑 全球拦截
   # 隐私保护
#  - RULE-SET,privacy,🛑 全球拦截
  # 人工智能
  - RULE-SET,人工智能,🤖️ 人工智能
  # 服务平台
  ## 微软服务
  - RULE-SET,微软服务,Ⓜ️ 微软服务
  ## 苹果服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,AppStore,🍎 苹果服务
  - RULE-SET,AppleProxy,🚀 节点选择
  - RULE-SET,Google服务,📢 谷歌服务
  # 支付平台
  - RULE-SET,PAYPAL,💴 PayPal
  # 社交媒体
  ## 国外
  - RULE-SET,TWITTER,💬 Twitter
  - RULE-SET,FACEBOOK,💬 Facebook
  - RULE-SET,REDDIT,💬 社交平台(Global)
  - RULE-SET,DISCORD,🐦 Discord
  - RULE-SET,TELEGRAM,📲 电报消息
  ## 国内
  - RULE-SET,Wechat,💬 社交平台(CN)
  - RULE-SET,新浪微博,💬 社交平台(CN)
  # 流媒体
  ## 国外媒体
  - RULE-SET,YOUTUBE1,📹 YouTube
  - RULE-SET,YOUTUBE2,📹 YouTube
  - RULE-SET,NETFLIX,🎥 奈飞视频
  - RULE-SET,DISNEY+,📽️ 迪士尼+
  - RULE-SET,Twitch,🚀 节点选择
  - RULE-SET,国外媒体,🙈 国外媒体
  ## 国内媒体
  - RULE-SET,哔哩哔哩,📺 哔哩哔哩
  - RULE-SET,斗鱼,📺 国内媒体
  - RULE-SET,国内媒体,📺 国内媒体
  # 娱乐
  ## 音乐
  - RULE-SET,SPOTIFY,🎻 Spotify
  ## 游戏平台
  - RULE-SET,PlayStation,🎮 游戏平台(Global)
  - RULE-SET,Epic,🎮 游戏平台(Global)
  - RULE-SET,Sony,🎮 游戏平台(Global)
  - RULE-SET,Steam,🎮 游戏平台(Global)
  - RULE-SET,Nintendo,🎮 游戏平台(Global)
  - RULE-SET,WanMeiShiJie,🎮 游戏平台(Global)
  - RULE-SET,Blizzard,🎮 游戏平台(Global)
  # 代理和直连网络大分流
  ## 代理网络
  - RULE-SET,Proxy_Domain,🪜 代理域名 # 策略选择
  ## 直连网络
  - RULE-SET,国内直连1,🔗 直连域名
#  - RULE-SET,国内直连2,🔗 直连域名
  ## 直连IP规则
  - GEOIP,CN,🎯 全球直连
  # 兜底规则
  - MATCH,🐟 漏网之鱼

