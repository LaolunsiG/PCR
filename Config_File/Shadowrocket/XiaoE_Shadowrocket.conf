# name：XiaoE_Shadowrocket
# content: 
# 感谢以下配置
# 1.whatshub.top-懒人配置: https://raw.githubusercontent.com/wlxuf/Shadowrocket/main/lazy_group.conf
# 2.Lucky-Shadowrocket配置: https://raw.githubusercontent.com/As-Lucky/Lucky/main/Lucky-Shadowrocket.conf
# 3.可莉配置: https://gitlab.com/lodepuly/vpn_tool/-/tree/master/Tool/Clash/Config
# updata：2024/07/16
# updata_log(更新日志): 修复了一些错误
# updata_url: https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/Config_File/Shadowrocket/XiaoE_Shadowrocket.conf
# 图标备用: 📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱

# 全局基础配置
[General]
bypass-system = true
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32

# DNS服务 
# 国内: dns-server = 119.29.29.29,14.114.114.114,223.5.5.5 
# 国外: dns-server = 1.1.1.1,8.8.8.8
dns-server = 114.114.114.114,223.5.5.5,1.1.1.1,system
fallback-dns-server = system
dns-fallback-system = false
dns-direct-system = false
private-ip-answer = true

ipv6 = false
prefer-ipv6 = false

always-reject-url-rewrite = false
icmp-auto-reply = true
# 更新链接
update-url = https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/Config_File/Shadowrocket/XiaoE_Shadowrocket.conf

# 出站
# 策略组
# 测速链接:
  # 节点测速链接(代理测速)：http://www.gstatic.com/generate_204；http://www.google.com/generate_204; 
  # 直连测速链接：http://www.v2ex.com/generate_204；http://wifi.vivo.com.cn/generate_204

# 代理分组类型：
  # select:手动切换节点。
  # url-test:自动切换延迟最低节点。
  # fallback:节点挂掉时自动切换其他可用节点。
  # load-balance:不同规则的请求使用分组里的不同节点进行连接。
  # random:随机使用分组里的不同节点进行连接。

# 代理分组其他设置参数：
  # interval: 指定间隔多长时间后需要重新发起测试。
  # timeout: 如果测试在超时前未完成，放弃测试。
  # tolerance: 只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
  # url: 指定要测试的URL。

# 该配置策略组可实现特定规则走指定策略或节点；如想让netflix走新加坡节点 那么可以在相应代理分组里勾选新加坡节点；
# 更改代理分组策略的步骤(以🎥 Netflix策略为例)：点击界面底部配置--点击配置文件"ⓘ"符号---代理分组---点击🎥 Netflix策略的"ⓘ"符号---勾选🇸🇬 新加坡节点--保存。(新版小火箭只需首页下拉即可调出代理分组界面）
# ♻️ ALL策略表示对所有节点进行测速并选择延迟最低的节点；测速间隔600秒，容差100ms；
# 若不想用某些特定节点 可以通过正则排除 例：♻️ ALL = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=100,timeout=5,policy-regex-filter=^(?!.*?(国内|限速|试用)).*$
# 也可以让指定机场参与测速 比如你的订阅连接的备注名是 YBNET 就套用以下示例：（新版已支持订阅选择）
# 🚀 策略选择 = select,✈️ 机场选择,🇨🇳 台湾节点,🇬🇧 英国节点,🇯🇵 日本节点,🇭🇰 香港节点,🇸🇬 新加坡节点,🇺🇸 美国节点,🇰🇷 韩国节点,🇷🇺 俄罗斯节点,🇮🇳 印度,🇩🇪 德国,🇨🇦 加拿大,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
# ✈️ 机场选择 = url-test,YBNET,interval=600,tolerance=0,timeout=3,select=0,url=http://www.gstatic.com/generate_204

[Proxy Group]
🚀 策略选择 = select,🛫 机场选择,🗺 地区选择,🎣 钓鱼机场,🌐 全球直连,policy-select-name=🛫 机场选择
🗺 地区选择 = select,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🇭🇰 香港
🎣 钓鱼机场 = select,♻️ All_1,policy-select-name=♻️ All_1
🛫 机场选择 = select,♻️ All_1,♻️ All_2,policy-select-name=♻️ All_1
♻️ All_1 = url-test,你的机场,use=true,interval=600,tolerance=100,timeout=5,url=http://www.gstatic.com/generate_204
♻️ All_2 = url-test,你的机场,use=true,interval=600,tolerance=100,timeout=5,url=http://www.gstatic.com/generate_204
♻️ All_3 = url-test,你的机场,use=true,interval=600,tolerance=50,timeout=5,url=http://www.gstatic.com/generate_204
♻️ All_4 = url-test,你的机场,use=true,interval=600,tolerance=100,timeout=5,url=http://www.gstatic.com/generate_204
♻️ All_5 = url-test,你的机场,use=true,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204
♻️ All_6 = url-test,你的机场,use=true,interval=600,tolerance=100,timeout=5,url=http://www.gstatic.com/generate_204
🐟 漏网之鱼 = select,🚀 策略选择,🌐 全球直连,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
💳 Download = select,🚀 策略选择,🌐 全球直连,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🤖️ 人工智能 = select,🇺🇸 美国,🇬🇧 英国,🇩🇪 德国,🇨🇦 加拿大,🇯🇵 日本,🇸🇬 新加坡,🇨🇳 台湾,🇷🇺 俄罗斯,policy-select-name=🇺🇸 美国
🪙 Paypal = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🇺🇸 美国
Ⓜ️ 微软服务 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
🍎 苹果服务 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
📲 Telegram = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
📄 Twitter = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
📖 Reddit = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
👤 Facebook = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🇭🇰 香港
🐦 Discord = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🍟 新浪微博 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
📹 YouTube = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🎥 Netflix = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🎬 Disney+ = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🎻 Spotify = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
🍿 国外媒体 = select,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🚀 策略选择
📽 哔哩哔哩 = select🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
🍔 国内媒体 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
🎮 游戏平台 = select,🌐 全球直连,🚀 策略选择,🇭🇰 香港,🇨🇳 台湾,🇯🇵 日本,🇰🇷 韩国,🇸🇬 新加坡,🇷🇺 俄罗斯,🇺🇸 美国,🇨🇦 加拿大,🇬🇧 英国,🇩🇪 德国,🇮🇳 印度,policy-select-name=🌐 全球直连
🚫 全球拦截 = select,REJECT,REJECT-DROP
🌐 全球直连 = select,DIRECT
# 手动选择策略组(select)
🇭🇰 香港 = select,香港优选节点,香港负载均衡,香港故障转移,policy-select-name=香港优选节点
🇨🇳 台湾 = select,台湾优选节点,台湾负载均衡,台湾故障转移,policy-select-name=台湾优选节点
🇯🇵 日本 = select,日本优选节点,日本负载均衡,日本故障转移,policy-select-name=日本优选节点
🇰🇷 韩国 = select,韩国优选节点,韩国负载均衡,韩国故障转移,policy-select-name=韩国优选节点
🇷🇺 俄罗斯 = select,俄罗斯优选节点,俄罗斯负载均衡,俄罗斯故障转移,policy-select-name=俄罗斯优选节点
🇸🇬 新加坡 = select,新加坡优选节点,新加坡负载均衡,新加坡故障转移,policy-select-name=新加坡优选节点
🇺🇸 美国 = select,美国优选节点,美国负载均衡,美国故障转移,policy-select-name=美国优选节点
🇨🇦 加拿大 =select,加拿大优选节点,加拿大负载均衡,加拿大故障转移,policy-select-name=加拿大优选节点
🇬🇧 英国 = select,英国优选节点,英国负载均衡,英国故障转移,policy-select-name=英国优选节点
🇩🇪 德国 = select,德国优选节点,德国负载均衡,德国故障转移,policy-select-name=德国优选节点
🇮🇳 印度 = select,印度优选节点,印度负载均衡,印度故障转移,policy-select-name=印度优选节点

# 优选节点策略组(url-test)
香港优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
台湾优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
美国优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$
韩国优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
俄罗斯优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
英国优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
日本优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
新加坡优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
印度优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India
德国优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇩🇪|德国|DEU|DE|柏林|慕尼黑|汉堡|科隆|Germany
加拿大优选节点 = url-test,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇨🇦|加拿大|CA|渥太华
# 负载均衡策略组(load-balance)
香港负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
台湾负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
美国负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$
韩国负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
俄罗斯负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
英国负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
日本负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
新加坡负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
印度负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India
德国负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇩🇪|德国|DEU|DE|柏林|慕尼黑|汉堡|科隆|Germany
加拿大负载均衡 = load-balance,interval=600,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇨🇦|加拿大|CA|渥太华
# 故障转移策略组(fallback)
香港故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$
台湾故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$
美国故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$
韩国故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$
俄罗斯故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇷🇺|俄罗斯|RU|莫斯科|圣彼得堡|喀山|哈尔科夫|乌法|新西伯利亚|下诺夫哥罗德|沃罗涅什
英国故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇬🇧|英国|UK|伦敦|英格兰|伯明翰|泰恩河畔纽卡斯尔|利兹|爱丁堡|格拉斯哥|苏格兰
日本故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$
新加坡故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$
印度故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇮🇳|印度|IN|IND|孟买|新德里|高知|Republic of India|India
德国故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇩🇪|德国|DEU|DE|柏林|慕尼黑|汉堡|科隆|Germany
加拿大故障转移 = fallback,select=0,interval=600,tolerance=20,timeout=5,url=http://www.google.com/generate_204,policy-regex-filter=🇨🇦|加拿大|CA|渥太华

# 路由规则
# 规则类型：
# 规则集
  # RULE-SET：匹配规则集内容。规则集的内容需包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list"。（兼容仅包含IP地址且不带规则类型的规则集）
  # DOMAIN-SET：匹配域名集内容。域名集的内容不包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple_Domain.list"。
# 域名规则
  # DOMAIN-SUFFIX：匹配请求域名的后缀。如“DOMAIN-SUFFIX,example.com,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
  # DOMAIN-KEYWORD：匹配请求域名的关键词。如“DOMAIN-KEYWORD,exa,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
  # DOMAIN：匹配请求的完整域名。如“DOMAIN,www.example.com,DIRECT”只能匹配到“www.example.com”。
# IP规则
  # GEOIP：匹配IP数据库。如“GEOIP,CN,DIRECT”可以匹配到归属地为CN的IP地址。
  # IP-CIDR：匹配IPv4或IPv6地址。如“IP-CIDR,192.168.1.0/24,DIRECT”可以匹配到IP段“192.168.1.1～192.168.1.254”。当域名请求遇到IP类规则时，Shadowrocket会向本地DNS服务器发送查询请求，以判断主机IP是否匹配规则。若IP类规则加“no-resolve”(如：IP-CIDR,172.16.0.0/12,DIRECT,no-resolve)，则域名请求将会跳过此规则，不会触发本地DNS查询。
  # IP-ASN：匹配IP地址隶属的ASN编号。如"IP-ASN,56040,DIRECT"可以匹配到属于China Mobile Communications Corporation网络的IP地址。
# 其他规则
  # USER-AGENT：匹配用户代理字符串，支持使用通配符“*”。如“USER-AGENT,MicroMessenger*,DIRECT”可以匹配到“MicroMessenger Client”。
  # URL-REGEX：匹配URL正则式。如“URL-REGEX,^https?://.+/item.+,REJECT”可以匹配到“https://www.example.com/item/abc/123”。
  # SCRIPT：匹配脚本名称。
  # DST-PORT：匹配目标主机名的端口号。如“DST-PORT,443,DIRECT”可以匹配到443目标端口。
# 逻辑规则
  # AND：逻辑规则，与规则。如“AND,((DOMAIN,www.example.com),(DST-PORT,123)),DIRECT”可以匹配到“www.example.com:123”。
  # NOT：逻辑规则，非规则。如“NOT,((DST-PORT,123)),DIRECT”可以匹配到除了“123”端口的其他所有请求。
  # OR：逻辑规则，或规则。如“OR,((DST-PORT,123),(DST-PORT,456)),DIRECT”可以匹配到“123”或“456”端口的所有请求。
# 兜底规则
  # FINAL：兜底策略。如“FINAL,PROXY”表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
  
# 规则策略：
  # PROXY：代理。通过代理服务器转发流量。
  # DIRECT：直连。连接不经过任何代理服务器。
  # REJECT：拒绝。返回HTTP状态码404，没有内容。
  # REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
  # REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
  # REJECT-200：拒绝。返回HTTP状态码200，没有内容。
  # REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
  # REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
  # REJECT-DROP：拒绝。丢弃IP包。
  # REJECT-NO-DROP：拒绝。返回ICMP端口不可达。
  # 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。

# 规则匹配的优先级：
  # 1.模块规则优先于配置文件规则。
  # 2.规则从上到下依次匹配。
  # 3.域名规则优先于IP规则。

[Rule]
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list,🌐 全球直连
DOMAIN-KEYWORD,mubu,🌐 全球直连
# Sub-Store
RULE-SET,https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/rule/substore.list,🚀 策略选择
# 广告拦截
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/AdvertisingLite/AdvertisingLite.list,🚫 全球拦截
#DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/AdvertisingLite/AdvertisingLite_Domain.list,🚫 全球拦截
# 隐私保护
#RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Privacy/Privacy.list,🚫 全球拦截
#DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Privacy/Privacy_Domain.list,🚫 全球拦截
# 服务平台
## 测速平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Speedtest/Speedtest.list,🚀 策略选择
## 下载平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Download/Download.list,💳 DOWNLOAD
## 人工智能
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Shadowrocket/AI/AI_Globle.list,🤖️ 人工智能
## 支付平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list,Ⓜ️ 微软服务
## 微软服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppStore/AppStore.list,🍎 苹果服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleProxy/AppleProxy.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list,🚀 策略选择
# 社交通讯平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list,📲 TELEGRAM
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list,📄 TWITTER
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list,👤 FACEBOOK
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Discord/Discord.list,🐦 DISCORD
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Reddit/Reddit.list,📖 REDDIT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/WeChat/WeChat.list,🌐 全球直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Weibo/Weibo.list,🍟 新浪微博
# 娱乐
## 游戏
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/PlayStation/PlayStation.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Epic/Epic.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Sony/Sony.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Shadowrocket/Steam/Steam_Classical.list,🎮 游戏平台
DOMAIN-KEYWORD,ubisoft,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Nintendo/Nintendo.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/WanMeiShiJie/WanMeiShiJie.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Blizzard/Blizzard.list,🎮 游戏平台
## 流媒体(短视频&影视)
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,📹 YOUTUBE
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTubeMusic/YouTubeMusic.list,📹 YOUTUBE
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,🎥 NETFLIX
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,🎬 DISNEY+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitch/Twitch.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list,🍿 国外媒体
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/XiaoE_PCR/main/rules/Shadowrocket/BiliBili/BiliBili_Classical.list,📽 哔哩哔哩
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Douyu/Douyu.list,🌐 全球直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaMedia/ChinaMedia.list,🍔 国内媒体
## 音乐
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list,🎻 SPOTIFY
# 国外代理
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy.list,🚀 策略选择
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy_Domain.list,🚀 策略选择
# 国内直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMax/ChinaMax.list,🌐 全球直连
#DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMax/ChinaMax_Domain.list,🌐 全球直连
GEOIP,CN,🌐 全球直连
FINAL,🐟 漏网之鱼

[Host]
# 域名指定本地值：
# example.com=1.2.3.4
# 域名指定DNS服务器：
# example.com=server:1.2.3.4
# wifi名称指定DNS服务器，如需指定多个DNS，可用逗号分隔：
# ssid:wifi名称=server:1.2.3.4

*.apple.com=server:system
*.apple.cn=server:system
*.cdn-apple.com=server:system
*.icloud.com=server:system
*.icloud-content.com=server:system
localhost = 127.0.0.1

[URL Rewrite]
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

[MITM]
# 开启 mitm，需要自行在Shadowrocket中生成证书、安装、信任
enable = 
hostname = sub.store
ca-passphrase = 
ca-p12 =

