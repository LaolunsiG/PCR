# name: Surge-test
# 参考的配置
# 1. https://raw.githubusercontent.com/Rabbit-Spec/Surge/Master/Conf/Spec/Surge.conf
# 2. https://raw.githubusercontent.com/getsomecat/GetSomeCats/Surge/FishChips.conf
# 3. https://raw.githubusercontent.com/As-Lucky/Lucky/main/Lucky-Surge.conf
# 4. https://gist.githubusercontent.com/Zeaphyou/864aebea248ca1bb8000e0e5623b65f3/raw/c36413c715f43f22772d3c2353358e1ff936b2e6/Surge.conf
# updata: 2025-01-25
# updata_log: 
# updata_url: https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Config_File/Surge/Surge-test.conf
# repo: https://github.com/LaolunsiG/PCR/tree/main/Config_File/Surge
# 图标备用： 📮✉️📪📬💫💬💥🔨🥼🚫🔰🙈🍎🎬📺🎱🍐🐝🦁💡🌵🐯🎸💻📽🌏🕹📡🦑🌟🐷🦒🐳🚦📵🎧💊🔓🚦🚥🐼⛔️🈲🌐🎯🖲️🐦🔞🎵📱🚀💳♻️🙈🍱🔂📦🔀⏱


# -------------------------------------
# General settings
# -------------------------------------
[General]
loglevel = notify                    # 日志级别
show-error-page-for-reject = true    # 当遇到 REJECT 策略时显示错误页
hide-vpn-icon = false                # 隐藏VPN图标

# UDP 流量配置
# 游戏优化模式，开启后会提高处理 UDP 流量的优先级，当系统负载高时会有比较明显的作用 (如高性能联机游戏)
udp-priority = true
udp-policy-not-supported-behaviour = REJECT

# -------------------------------------
# 网络优化
# 增强版 Wi-Fi 助理，Surge 会在 Wi-Fi 网络不佳时尝试使用数据网络建立连接。该功能将对所有连接生效，请仅当使用不限量的数据流量时开启。
wifi-assist = false
# 混合网络，该选项可显著改善在弱 Wi-Fi 和网络切换时的网络体验。该选项对所有 TCP 连接和 DNS 查询生效。请仅当使用不限量的数据流量套餐时开启。
all-hybrid = true

# -------------------------------------
# Internet 测试 URL
internet-test-url = http://wifi.vivo.com.cn/generate_204
# 代理测速 URL
proxy-test-url = http://www.google.com/generate_204
# 测试超时（s/秒）:Surge 将向该 URL 发送一个 HTTP HEAD 请求。测试只关心是否收到了返回数据，并不关心数据内容。仅支持 http:// 协议
test-timeout = 2

# -------------------------------------
# GEOIP 配置
## GEOIP 数据库
geoip-maxmind-url = https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb
## GEOIP 数据库自动更新
disable-geoip-db-auto-update = true

# -------------------------------------
# IPV6 配置
# 是否启动完整的 IPv6 支持 (默认值: false)
ipv6 = true
# 允许 IPv6 通过 Surge VIF。当希望 Surge 处理连接到 IPv6 地址的原始 TCP 连接时非常有用。可选项：true，false，auto，always
ipv6-vif = auto

# -------------------------------------
# Wifi 访问
# 允许 Wi-Fi 访问
allow-wifi-access = false
# 允许个人热点访问 (仅 iOS，若允许个人热点访问将「false」改为「true」)
allow-hotspot-access = false
# 供外网访问的服务端口 [IOS使用]
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153

# -------------------------------------
# 远程控制器，允许 Surge 请求查看器或 Surge CLI 进行管理控制。如果允许由 Wi-Fi 控制则将「127.0.0.1」修改为「0.0.0.0」
# external-controller-access = xiaoelaolunsi@0.0.0.0:6171
# HTTP-API & Web 控制器
http-api = xiaoelaolunsi@0.0.0.0:6171
# 使用HTTPS替代HTTP协议，需要先配置Mitm的CA证书，同时需要在客户端设备上手动安装并信任CA证书
http-api-tls = false
# 页面控制器：通过页面控制Surge， Safari输入127.0.0.1:6171,填入HTTP-API密码即可。
http-api-web-dashboard = true


# -------------------------------------
# 入站配置
# -------------------------------------
# 跳过代理
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local
# 排除简单主机名
exclude-simple-hostnames = true

# -------------------------------------
# 路由防火墙
# 包含所有的网络请求
include-all-networks = false
# 包含本地网络请求
include-local-networks = false
# 让 Surge 接管 Apple Push Notification service (APNs) 相关请求。仅应在有特殊需求时开启。正常情况下不应该开启以避免产生问题。
include-apns = false
# 让 Surge 接管 VoLTE, Wi-Fi Calling, IMS, MMS, Visual Voicemail 等相关数据网络服务的请求。仅应在有特殊需求时开启。正常情况下不应该开启以避免产生问题。
include-cellular-services = false


# -------------------------------------
# DNS 配置
# -------------------------------------
# DNS 劫持，另外还可以使用 hijack-dns = *:53 来劫持所有的 DNS 查询。
hijack-dns = 8.8.8.8:53, 8.8.4.4:53
# 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个假 IP 地址。DNS 数据包将被转发到上游 DNS 服务器。
always-real-ip = *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com
# 开启该选项后，对于存在于本地 DNS 映射中的域名，Surge 将使用本地映射结果的 IP 地址进行代理请求，而不再使用原始域名。
use-local-host-item-for-proxy = false
# 使加密 DNS 请求通过代理策略执行
encrypted-dns-follow-outbound-mode = false
# 跳过证书验证
encrypted-dns-skip-cert-verification = false

# -------------------------------------
# DNS 服务器
## 传统 DNS 服务器（udp 类）
dns-server = system, 119.29.29.29, 223.5.5.5, 1.1.1.1, 8.8.8.8
## 加密 DNS 服务器设置
#encrypted-dns-server = h3://223.5.5.5/dns-query

# -------------------------------------
[Host]
# DNS 映射
## 腾讯
*.qq.com = server:119.29.29.29
*.tencent.com = server:119.29.29.29
*.weixin.com = server:119.29.29.29
## 苹果服务
### Apple TestFlight
*testflight.apple.com = server:8.8.4.4

# 域名 - IP
## 常用 DNS 服务提供商
### 360
doh.360.cn = 23.6.48.18, 112.65.69.15 // https://doh.360.cn/dns-query
dot.360.cn = 101.198.198.198, 101.198.199.200, 101.198.192.33, 112.65.69.15 // dot.360.cn:853
### ali
dns.alidns.com = 223.5.5.5, 223.6.6.6, 2400:3200:baba::1, 2400:3200::1 // https://dns.alidns.com/dns-query
### clooudflare
1dot1dot1dot1.cloudflare-dns.com = 1.1.1.1, 1.0.0.1, 2606:4700:4700::1001, 2606:4700:4700::1111 // 1dot1dot1dot1.cloudflare-dns.com:853
cloudflare-dns.com = 104.16.249.249, 104.16.248.249, 2606:4700::6810:f8f9, 2606:4700::6810:f9f9 // https://cloudflare-dns.com/dns-query
one.one.one.one = 1.1.1.1, 1.0.0.1, 2606:4700:4700::1001, 2606:4700:4700::1111 // one.one.one.one:853
ordns.he.net = 74.82.42.42, 2001:470:20::2 // https://ordns.he.net/dns-query
### googel
dns.google = 8.8.8.8, 8.8.4.4, 2001:4860:4860::8888, 2001:4860:4860::8844 // https://dns.google/dns-query
dns64.dns.google = 2001:4860:4860::6464, 2001:4860:4860::64 // https://dns64.dns.google/dns-query
### tw
dns.twnic.tw = 101.101.101.101, 2001:de4::101, 2001:de4::102 // https://dns.twnic.tw/dns-query
### 其他
doh.pub = 1.12.12.12, 120.53.53.53 // https://doh.pub/dns-query
dot.pub = 1.12.12.12, 120.53.53.53 // dot.pub:853
## Firebase Cloud Messaging
mtalk.google.com = 108.177.125.188

# -------------------------------------
# 出站配置
# -------------------------------------
# 出站-本地节点
[Proxy]
Warp+ = wireguard, section-name=C01B7A27, underlying-proxy=🚀 策略选择, test-url=http://www.google.com/generate_204, ip-version=v4-only

# -------------------------------------
[Proxy Group]
# ----------------节点选择策略组--------------------
🚀 策略选择 = select, 🛫 机场延迟优选, 🛫 机场负载均衡, 🗺 地区选择, 🌐 Direct, no-alert=0, hidden=0
🗺 地区选择 = select, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, 🌐 Direct, no-alert=0, hidden=0
🛫 机场延迟优选 = select, ⏱ 机场01, ⏱ 机场02, ⏱ 机场03, ⏱ 机场04, ⏱ 机场05, 🌐 Direct, no-alert=0, hidden=0
🛫 机场负载均衡 = select, 🎛 机场01, 🎛 机场02, 🎛 机场03, 🎛 机场04, 🎛 机场05, 🌐 Direct, no-alert=0, hidden=0

# 这个策略组是为了筛选地区节点，所以是必要的
♻️ All = select, no-alert=0, hidden=1, include-other-group="机场01, 机场02, 机场03, 机场04, 机场05"

# ----------------机场测试策略组--------------------
# 机场测试
## 延迟测试（url-test）
⏱ 机场01 = url-test, tolerance=20, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=0, include-other-group="机场01"
⏱ 机场02 = url-test, tolerance=20, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=0, include-other-group="机场02"
⏱ 机场03 = url-test, tolerance=20, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=0, include-other-group="机场03"
⏱ 机场04 = url-test, tolerance=20, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=0, include-other-group="机场04"
⏱ 机场05 = url-test, tolerance=20, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=0, include-other-group="机场05"

## 负载均衡（load-balance）
🎛 机场01 = load-balance, persistent = true, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=1, include-other-group="机场01"
🎛 机场02 = load-balance, persistent = true, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=1, include-other-group="机场01"
🎛 机场03 = load-balance, persistent = true, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=1, include-other-group="机场03"
🎛 机场04 = load-balance, persistent = true, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=1, include-other-group="机场04"
🎛 机场05 = load-balance, persistent = true, url = http://www.google.com/generate_204, interval = 30, timeout = 2, no-alert=0, hidden=1, include-other-group="机场05"

# ----------------订阅节点（远程节点）策略组--------------------
# 隐藏机场策略组
机场01 = select, no-alert=1, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*直连|DIRECT), update-interval=86400, policy-path=机场01
机场02 = select, no-alert=1, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*直连|DIRECT), update-interval=86400, policy-path=机场02
机场03 = select, no-alert=1, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*直连|DIRECT), update-interval=86400, policy-path=机场03
机场04 = select, no-alert=1, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*直连|DIRECT), update-interval=86400, policy-path=机场04
机场05 = select, no-alert=1, hidden=1, include-all-proxies=0, policy-regex-filter=^(?!.*直连|DIRECT), update-interval=86400, policy-path=机场05

# ----------------功能策略组--------------------
# 兜底策略组
🐟 漏网之鱼 = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
# 服务平台
## 机场服务
🛫 Airport = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🍱 Sub-Store = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
💳 Download = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🐱 Github = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🤖️ AI = select, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🍎 Apple = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
Ⓜ️ Microsoft = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
## 支付平台
🪙 Paypal = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
# 社交通讯平台
## 国外
🐦 Discord = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
📲 Telegram = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
# 社交媒体平台
## 国外
👤 Facebook = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
📖 Reddit = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
📄 Twitter = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
📹 YouTube = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
# 娱乐平台
## 音乐
🎵 Spotify = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
## 游戏
🎮 GlobalGames = select, 🌐 Direct, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
## 影视
### 国外
🎬 Disney+ = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🎥 Netflix = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🍿 GlobalMedia = select, 🚀 策略选择, 🇮🇳 India, 🇨🇦 Canada, 🇺🇸 United States, 🇭🇰 Hong Kong, 🇯🇵 Japan, 🇰🇷 Korea, 🇲🇴 Oman, 🇷🇺 Russia, 🇸🇬 Singapore, 🇨🇳 Taiwan, 🇦🇺 Australia, 🇩🇪 Germany, 🇬🇧 Britain, 🇳🇱 Netherlands, no-alert=0, hidden=0
🌐 Direct = select, DIRECT, no-alert=0, hidden=1, include-all-proxies=0
🚫 Reject = select, REJECT, REJECT-DROP, no-alert=0, hidden=1, include-all-proxies=0

# ----------------国家或地区策略组--------------------
# 优选节点策略组
## Africa(非洲)
🇮🇳 India = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇮🇳|印|班加罗尔|孟买|Mumbai|IN|India))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$孟买|Mumbai|IN|India))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
## America(美洲)
🇨🇦 Canada = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇨🇦|加拿大|CA|Canada))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇺🇸 United States = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇺🇸|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
## Asia(亚洲)
🇭🇰 Hong Kong = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇭🇰|港|虚通|HK|Hong))(?!.*((?i)回国|校园|游戏|教育|GAME|IPV6)).*$
🇯🇵 Japan = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇯🇵|日|川日|东京|大阪|泉日|埼玉|JP|Japan))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇰🇷 Korea = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇰🇷|韩|韓|首尔|KR|Korea))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇲🇴 Oman = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇲🇴|澳门|MO|Oman))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇷🇺 Russia = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇷🇺|俄|莫斯科|新西伯利亚|Новосиби́рская|Moscow|RU|Russia))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇸🇬 Singapore = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇸🇬|新加坡|狮|SG|Singapore))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇨🇳 Taiwan = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇹🇼|台|TW|Tai))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
## Australia(澳洲)
🇦🇺 Australia = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇦🇺|澳大|AU|Australia))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
## Europe(欧洲)
🇩🇪 Germany = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇩🇪|德|DE|Germany))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇬🇧 Britain = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇬🇧|英|伦敦|UK|United Kingdom))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$
🇳🇱 Netherlands = url-test, tolerance=20, timeout = 2, no-alert=0, hidden=0, include-all-proxies=1, include-other-group="♻️ All", policy-regex-filter=^(?=.*((?i)🇳🇱|荷|NL|Holland|Netherlands))(?!.*((?i)回国|校园|游戏|教育|久虚|GAME|IPV6)).*$


# -------------------------------------
# 路由规则
# -------------------------------------
# 规则匹配的优先级
# 规则从上到下依次匹配，换句话说，第一条规则的优先级最高。

[Rule]
DOMAIN-KEYWORD,mubu,🌐 Direct
# Lan
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Lan/Lan.list,🌐 Direct
# 服务平台
## Sub-Store
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Rules/Shadowrocket/Sub-Store/Sub-Store-Classical.list,🍱 Sub-Store
## 机场服务
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Shadowrocket/Airport/Airport-Classical.list,🛫 Airport
## 人工智能
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Rules/Shadowrocket/GlobalAI/GlobalAI-Classical.list,🤖️ AI
## 下载平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Download/Download.list,💳 Download
## 苹果服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Apple/Apple.list,🍎 Apple
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Apple/Apple_Domain.list,🍎 Apple
## Google 服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list,🚀 策略选择
## 微软服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list,Ⓜ️ Microsoft
## 支付平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list,🪙 Paypal
## 代码托管平台
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/GitHub/GitHub.list,🐱 Github
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/GitLab/GitLab.list,🐱 Github
# 社交通讯平台
## 国外
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Discord/Discord.list,🐦 Discord
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Telegram/Telegram.list,📲 Telegram
# 社交媒体平台
## 国外
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list,👤 Facebook
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Reddit/Reddit.list,📖 Reddit
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list,📄 Twitter
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,📹 YouTube
# 娱乐平台
## 游戏
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Shadowrocket/GlobalGame/GlobalGame-Classical.list,🎮 GlobalGames
## 音乐
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list,🎵 Spotify
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTubeMusic/YouTubeMusic.list,📹 YouTube
## 影视
### 国外
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Disney/Disney.list,🎬 Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,🎥 Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitch/Twitch.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/main/Rules/Shadowrocket/GlobalMedia/GlobalMedia-lite-Classical.list,🍿 GlobalMedia
# 国外代理
# GFW
RULE-SET,https://raw.githubusercontent.com/LaolunsiG/PCR/refs/heads/main/Rules/Shadowrocket/GFWLite/GFWLite-Classical.list,🚀 策略选择
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy.list,🚀 策略选择
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy_Domain.list,🚀 策略选择
# 国内直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMaxNoIP/ChinaMaxNoIP.list,🌐 Direct
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMax/ChinaMax_Domain.list,🌐 Direct
FINAL,🐟 漏网之鱼


# -------------------------------------
# 其他配置
# -------------------------------------
[URL Rewrite]
^http://www\.google\.cn http://www.google.com header
^https?:\/\/(www\.)?g\.cn https://www.google.com 302
^https?:\/\/(www\.)?google\.cn https://www.google.com 302
^http://yachen\.com https://yach.me 302
^http://ad\.com/ad\.png - reject

# -------------------------------------
[MITM]
